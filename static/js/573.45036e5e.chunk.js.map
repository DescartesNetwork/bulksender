{"version":3,"file":"static/js/573.45036e5e.chunk.js","mappings":"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","sources":["../node_modules/@senswap/react-lazyload/lib/index.js","../node_modules/@senswap/react-lazyload/lib/utils/debounce.js","../node_modules/@senswap/react-lazyload/lib/utils/event.js","../node_modules/@senswap/react-lazyload/lib/utils/scrollParent.js","../node_modules/@senswap/react-lazyload/lib/utils/throttle.js","../node_modules/browser-pack/_prelude.js","../node_modules/bignumber.js/bignumber.js","en-US.js","formatting.js","globalState.js","loading.js","manipulating.js","numbro.js","parsing.js","unformatting.js","validating.js","../node_modules/papaparse/papaparse.min.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceVisible = exports.forceCheck = exports.lazyload = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _event = require('./utils/event');\n\nvar _scrollParent = require('./utils/scrollParent');\n\nvar _scrollParent2 = _interopRequireDefault(_scrollParent);\n\nvar _debounce = require('./utils/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _throttle = require('./utils/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * react-lazyload\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar defaultBoundingClientRect = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  width: 0,\n  height: 0\n};\nvar LISTEN_FLAG = 'data-lazyload-listened';\nvar listeners = [];\nvar pending = [];\n\n// try to handle passive events\nvar passiveEventSupported = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passiveEventSupported = true;\n    }\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {}\n// if they are supported, setup the optional params\n// IMPORTANT: FALSE doubles as the default CAPTURE value!\nvar passiveEvent = passiveEventSupported ? { capture: false, passive: true } : false;\n\n/**\n * Check if `component` is visible in overflow container `parent`\n * @param  {node} component React component\n * @param  {node} parent    component's scroll parent\n * @return {bool}\n */\nvar checkOverflowVisible = function checkOverflowVisible(component, parent) {\n  var node = component.ref;\n\n  var parentTop = void 0;\n  var parentLeft = void 0;\n  var parentHeight = void 0;\n  var parentWidth = void 0;\n\n  try {\n    ;\n    var _parent$getBoundingCl = parent.getBoundingClientRect();\n\n    parentTop = _parent$getBoundingCl.top;\n    parentLeft = _parent$getBoundingCl.left;\n    parentHeight = _parent$getBoundingCl.height;\n    parentWidth = _parent$getBoundingCl.width;\n  } catch (e) {\n    ;parentTop = defaultBoundingClientRect.top;\n    parentLeft = defaultBoundingClientRect.left;\n    parentHeight = defaultBoundingClientRect.height;\n    parentWidth = defaultBoundingClientRect.width;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n  var windowInnerWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  // calculate top and height of the intersection of the element's scrollParent and viewport\n  var intersectionTop = Math.max(parentTop, 0); // intersection's top relative to viewport\n  var intersectionLeft = Math.max(parentLeft, 0); // intersection's left relative to viewport\n  var intersectionHeight = Math.min(windowInnerHeight, parentTop + parentHeight) - intersectionTop; // height\n  var intersectionWidth = Math.min(windowInnerWidth, parentLeft + parentWidth) - intersectionLeft; // width\n\n  // check whether the element is visible in the intersection\n  var top = void 0;\n  var left = void 0;\n  var height = void 0;\n  var width = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie.top;\n    left = _node$getBoundingClie.left;\n    height = _node$getBoundingClie.height;\n    width = _node$getBoundingClie.width;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    left = defaultBoundingClientRect.left;\n    height = defaultBoundingClientRect.height;\n    width = defaultBoundingClientRect.width;\n  }\n\n  var offsetTop = top - intersectionTop; // element's top relative to intersection\n  var offsetLeft = left - intersectionLeft; // element's left relative to intersection\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return offsetTop - offsets[0] <= intersectionHeight && offsetTop + height + offsets[1] >= 0 && offsetLeft - offsets[0] <= intersectionWidth && offsetLeft + width + offsets[1] >= 0;\n};\n\n/**\n * Check if `component` is visible in document\n * @param  {node} component React component\n * @return {bool}\n */\nvar checkNormalVisible = function checkNormalVisible(component) {\n  var node = component.ref;\n\n  // If this element is hidden by css rules somehow, it's definitely invisible\n  if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return false;\n\n  var top = void 0;\n  var elementHeight = void 0;\n\n  try {\n    ;\n    var _node$getBoundingClie2 = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie2.top;\n    elementHeight = _node$getBoundingClie2.height;\n  } catch (e) {\n    ;top = defaultBoundingClientRect.top;\n    elementHeight = defaultBoundingClientRect.height;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return top - offsets[0] <= windowInnerHeight && top + elementHeight + offsets[1] >= 0;\n};\n\n/**\n * Detect if element is visible in viewport, if so, set `visible` state to true.\n * If `once` prop is provided true, remove component as listener after checkVisible\n *\n * @param  {React} component   React component that respond to scroll and resize\n */\nvar checkVisible = function checkVisible(component) {\n  var node = component.ref;\n  if (!(node instanceof HTMLElement)) {\n    return;\n  }\n\n  var parent = (0, _scrollParent2.default)(node);\n  var isOverflow = component.props.overflow && parent !== node.ownerDocument && parent !== document && parent !== document.documentElement;\n  var visible = isOverflow ? checkOverflowVisible(component, parent) : checkNormalVisible(component);\n  if (visible) {\n    // Avoid extra render if previously is visible\n    if (!component.visible) {\n      if (component.props.once) {\n        pending.push(component);\n      }\n\n      component.visible = true;\n      component.forceUpdate();\n    }\n  } else if (!(component.props.once && component.visible)) {\n    component.visible = false;\n    if (component.props.unmountIfInvisible) {\n      component.forceUpdate();\n    }\n  }\n};\n\nvar purgePending = function purgePending() {\n  pending.forEach(function (component) {\n    var index = listeners.indexOf(component);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n  });\n\n  pending = [];\n};\n\nvar lazyLoadHandler = function lazyLoadHandler() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    checkVisible(listener);\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n/**\n * Forces the component to display regardless of whether the element is visible in the viewport.\n */\nvar forceVisible = function forceVisible() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    listener.visible = true;\n    listener.forceUpdate();\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n// Depending on component's props\nvar delayType = void 0;\nvar finalLazyLoadHandler = null;\n\nvar isString = function isString(string) {\n  return typeof string === 'string';\n};\n\nvar LazyLoad = function (_Component) {\n  _inherits(LazyLoad, _Component);\n\n  function LazyLoad(props) {\n    _classCallCheck(this, LazyLoad);\n\n    var _this = _possibleConstructorReturn(this, (LazyLoad.__proto__ || Object.getPrototypeOf(LazyLoad)).call(this, props));\n\n    _this.visible = false;\n    _this.setRef = _this.setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(LazyLoad, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // It's unlikely to change delay type on the fly, this is mainly\n      // designed for tests\n      var scrollport = window;\n      var scrollContainer = this.props.scrollContainer;\n\n      if (scrollContainer) {\n        if (isString(scrollContainer)) {\n          scrollport = scrollport.document.querySelector(scrollContainer);\n        }\n      }\n      var needResetFinalLazyLoadHandler = this.props.debounce !== undefined && delayType === 'throttle' || delayType === 'debounce' && this.props.debounce === undefined;\n\n      if (needResetFinalLazyLoadHandler) {\n        (0, _event.off)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        finalLazyLoadHandler = null;\n      }\n\n      if (!finalLazyLoadHandler) {\n        if (this.props.debounce !== undefined) {\n          finalLazyLoadHandler = (0, _debounce2.default)(lazyLoadHandler, typeof this.props.debounce === 'number' ? this.props.debounce : 300);\n          delayType = 'debounce';\n        } else if (this.props.throttle !== undefined) {\n          finalLazyLoadHandler = (0, _throttle2.default)(lazyLoadHandler, typeof this.props.throttle === 'number' ? this.props.throttle : 300);\n          delayType = 'throttle';\n        } else {\n          finalLazyLoadHandler = lazyLoadHandler;\n        }\n      }\n\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = 1 + +parent.getAttribute(LISTEN_FLAG);\n          if (listenerCount === 1) {\n            parent.addEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n          }\n          parent.setAttribute(LISTEN_FLAG, listenerCount);\n        }\n      } else if (listeners.length === 0 || needResetFinalLazyLoadHandler) {\n        var _props = this.props,\n            scroll = _props.scroll,\n            resize = _props.resize;\n\n\n        if (scroll) {\n          (0, _event.on)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        }\n\n        if (resize) {\n          (0, _event.on)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        }\n      }\n\n      listeners.push(this);\n      checkVisible(this);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      return this.visible;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = +parent.getAttribute(LISTEN_FLAG) - 1;\n          if (listenerCount === 0) {\n            parent.removeEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n            parent.removeAttribute(LISTEN_FLAG);\n          } else {\n            parent.setAttribute(LISTEN_FLAG, listenerCount);\n          }\n        }\n      }\n\n      var index = listeners.indexOf(this);\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n\n      if (listeners.length === 0 && typeof window !== 'undefined') {\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);\n      }\n    }\n  }, {\n    key: 'setRef',\n    value: function setRef(element) {\n      if (element) {\n        this.ref = element;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          height = _props2.height,\n          children = _props2.children,\n          placeholder = _props2.placeholder,\n          className = _props2.className,\n          classNamePrefix = _props2.classNamePrefix,\n          style = _props2.style;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: classNamePrefix + '-wrapper ' + className,\n          ref: this.setRef,\n          style: style\n        },\n        this.visible ? children : placeholder ? placeholder : _react2.default.createElement('div', {\n          style: { height: height },\n          className: classNamePrefix + '-placeholder'\n        })\n      );\n    }\n  }]);\n\n  return LazyLoad;\n}(_react.Component);\n\nLazyLoad.propTypes = {\n  className: _propTypes2.default.string,\n  classNamePrefix: _propTypes2.default.string,\n  once: _propTypes2.default.bool,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),\n  overflow: _propTypes2.default.bool,\n  resize: _propTypes2.default.bool,\n  scroll: _propTypes2.default.bool,\n  children: _propTypes2.default.node,\n  throttle: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  debounce: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  placeholder: _propTypes2.default.node,\n  scrollContainer: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  unmountIfInvisible: _propTypes2.default.bool,\n  style: _propTypes2.default.object\n};\n\nLazyLoad.defaultProps = {\n  className: '',\n  classNamePrefix: 'lazyload',\n  once: false,\n  offset: 0,\n  overflow: false,\n  resize: false,\n  scroll: true,\n  unmountIfInvisible: false\n};\n\nvar getDisplayName = function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nvar decorator = function decorator() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function lazyload(WrappedComponent) {\n    return function (_Component2) {\n      _inherits(LazyLoadDecorated, _Component2);\n\n      function LazyLoadDecorated() {\n        _classCallCheck(this, LazyLoadDecorated);\n\n        var _this2 = _possibleConstructorReturn(this, (LazyLoadDecorated.__proto__ || Object.getPrototypeOf(LazyLoadDecorated)).call(this));\n\n        _this2.displayName = 'LazyLoad' + getDisplayName(WrappedComponent);\n        return _this2;\n      }\n\n      _createClass(LazyLoadDecorated, [{\n        key: 'render',\n        value: function render() {\n          return _react2.default.createElement(\n            LazyLoad,\n            options,\n            _react2.default.createElement(WrappedComponent, this.props)\n          );\n        }\n      }]);\n\n      return LazyLoadDecorated;\n    }(_react.Component);\n  };\n};\n\nexports.lazyload = decorator;\nexports.default = LazyLoad;\nexports.forceCheck = lazyLoadHandler;\nexports.forceVisible = forceVisible;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\nfunction debounce(func, wait, immediate) {\n  var timeout = void 0;\n  var args = void 0;\n  var context = void 0;\n  var timestamp = void 0;\n  var result = void 0;\n\n  var later = function later() {\n    var last = +new Date() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = null;\n          args = null;\n        }\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = +new Date();\n\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = null;\n      args = null;\n    }\n\n    return result;\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.on = on;\nexports.off = off;\nfunction on(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.addEventListener) {\n    el.addEventListener(eventName, callback, opts);\n  } else if (el.attachEvent) {\n    el.attachEvent(\"on\" + eventName, function (e) {\n      callback.call(el, e || window.event);\n    });\n  }\n}\n\nfunction off(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.removeEventListener) {\n    el.removeEventListener(eventName, callback, opts);\n  } else if (el.detachEvent) {\n    el.detachEvent(\"on\" + eventName, callback);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * @fileOverview Find scroll parent\n */\n\nexports.default = function (node) {\n  if (!(node instanceof HTMLElement)) {\n    return document.documentElement;\n  }\n\n  var excludeStaticParent = node.style.position === 'absolute';\n  var overflowRegex = /(scroll|auto|overlay)/;\n  var parent = node;\n\n  while (parent) {\n    if (!parent.parentNode) {\n      return node.ownerDocument || document.documentElement;\n    }\n\n    var style = window.getComputedStyle(parent);\n    var position = style.position;\n    var overflow = style.overflow;\n    var overflowX = style['overflow-x'];\n    var overflowY = style['overflow-y'];\n\n    if (position === 'static' && excludeStaticParent) {\n      parent = parent.parentNode;\n      continue;\n    }\n\n    if (overflowRegex.test(overflow) && overflowRegex.test(overflowX) && overflowRegex.test(overflowY)) {\n      return parent;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return node.ownerDocument || node.documentElement || document.documentElement;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = throttle;\n/*eslint-disable */\nfunction throttle(fn, threshhold, scope) {\n  threshhold || (threshhold = 250);\n  var last, deferTimer;\n  return function () {\n    var context = scope || this;\n\n    var now = +new Date(),\n        args = arguments;\n    if (last && now < last + threshhold) {\n      // hold on to it\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshhold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v8.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    hasSymbol = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol',\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (hasSymbol) {\r\n      P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n      // Node.js v10.12.0+\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n    }\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nmodule.exports = {\n    languageTag: \"en-US\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    spaceSeparated: false,\n    ordinal: function(number) {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    bytes: {\n        binarySuffixes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"],\n        decimalSuffixes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"prefix\",\n        code: \"USD\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst globalState = require(\"./globalState\");\nconst validating = require(\"./validating\");\nconst parsing = require(\"./parsing\");\nconst BigNumber = require(\"bignumber.js\");\n\nconst powers = {\n    trillion: Math.pow(10, 12),\n    billion: Math.pow(10, 9),\n    million: Math.pow(10, 6),\n    thousand: Math.pow(10, 3)\n};\n\nconst defaultOptions = {\n    totalLength: 0,\n    characteristic: 0,\n    forceAverage: false,\n    average: false,\n    mantissa: -1,\n    optionalMantissa: true,\n    thousandSeparated: false,\n    spaceSeparated: false,\n    negative: \"sign\",\n    forceSign: false,\n    roundingFunction: Math.round,\n    spaceSeparatedAbbreviation: false\n};\n\nconst { binarySuffixes, decimalSuffixes } = globalState.currentBytes();\n\nconst bytes = {\n    general: { scale: 1024, suffixes: decimalSuffixes, marker: \"bd\" },\n    binary: { scale: 1024, suffixes: binarySuffixes, marker: \"b\" },\n    decimal: { scale: 1000, suffixes: decimalSuffixes, marker: \"d\" }\n};\n\n/**\n * Entry point. Format the provided INSTANCE according to the PROVIDEDFORMAT.\n * This method ensure the prefix and postfix are added as the last step.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {NumbroFormat|string} [providedFormat] - specification for formatting\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction format(instance, providedFormat = {}, numbro) {\n    if (typeof providedFormat === \"string\") {\n        providedFormat = parsing.parseFormat(providedFormat);\n    }\n\n    let valid = validating.validateFormat(providedFormat);\n\n    if (!valid) {\n        return \"ERROR: invalid format\";\n    }\n\n    let prefix = providedFormat.prefix || \"\";\n    let postfix = providedFormat.postfix || \"\";\n\n    let output = formatNumbro(instance, providedFormat, numbro);\n    output = insertPrefix(output, prefix);\n    output = insertPostfix(output, postfix);\n    return output;\n}\n\n/**\n * Format the provided INSTANCE according to the PROVIDEDFORMAT.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatNumbro(instance, providedFormat, numbro) {\n    switch (providedFormat.output) {\n        case \"currency\": {\n            providedFormat = formatOrDefault(providedFormat, globalState.currentCurrencyDefaultFormat());\n            return formatCurrency(instance, providedFormat, globalState, numbro);\n        }\n        case \"percent\": {\n            providedFormat = formatOrDefault(providedFormat, globalState.currentPercentageDefaultFormat());\n            return formatPercentage(instance, providedFormat, globalState, numbro);\n        }\n        case \"byte\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentByteDefaultFormat());\n            return formatByte(instance, providedFormat, globalState, numbro);\n        case \"time\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentTimeDefaultFormat());\n            return formatTime(instance, providedFormat, globalState, numbro);\n        case \"ordinal\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentOrdinalDefaultFormat());\n            return formatOrdinal(instance, providedFormat, globalState, numbro);\n        case \"number\":\n        default:\n            return formatNumber({\n                instance,\n                providedFormat,\n                numbro\n            });\n    }\n}\n\n/**\n * Get the decimal byte unit (MB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1000).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getDecimalByteUnit(instance) {\n    let data = bytes.decimal;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Get the binary byte unit (MiB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1024).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getBinaryByteUnit(instance) {\n    let data = bytes.binary;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Get the decimal byte unit (MB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1024).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getByteUnit(instance) {\n    let data = bytes.general;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Return the value and the suffix computed in byte.\n * It uses the SUFFIXES and the SCALE provided.\n *\n * @param {number} value - Number to format\n * @param {[String]} suffixes - List of suffixes\n * @param {number} scale - Number in-between two units\n * @return {{value: Number, suffix: String}}\n */\nfunction getFormatByteUnits(value, suffixes, scale) {\n    let suffix = suffixes[0];\n    let abs = Math.abs(value);\n\n    if (abs >= scale) {\n        for (let power = 1; power < suffixes.length; ++power) {\n            let min = Math.pow(scale, power);\n            let max = Math.pow(scale, power + 1);\n\n            if (abs >= min && abs < max) {\n                suffix = suffixes[power];\n                value = value / min;\n                break;\n            }\n        }\n\n        // values greater than or equal to [scale] YB never set the suffix\n        if (suffix === suffixes[0]) {\n            value = value / Math.pow(scale, suffixes.length - 1);\n            suffix = suffixes[suffixes.length - 1];\n        }\n    }\n\n    return { value, suffix };\n}\n\n/**\n * Format the provided INSTANCE as bytes using the PROVIDEDFORMAT, and STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatByte(instance, providedFormat, state, numbro) {\n    let base = providedFormat.base || \"binary\";\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    const { binarySuffixes: localBinarySuffixes, decimalSuffixes: localDecimalSuffixes } = state.currentBytes();\n\n    const localBytes = {\n        general: { scale: 1024, suffixes: localDecimalSuffixes || decimalSuffixes, marker: \"bd\" },\n        binary: { scale: 1024, suffixes: localBinarySuffixes || binarySuffixes, marker: \"b\" },\n        decimal: { scale: 1000, suffixes: localDecimalSuffixes || decimalSuffixes, marker: \"d\" }\n    };\n    let baseInfo = localBytes[base];\n\n    let { value, suffix } = getFormatByteUnits(instance._value, baseInfo.suffixes, baseInfo.scale);\n\n    let output = formatNumber({\n        instance: numbro(value),\n        providedFormat,\n        state,\n        defaults: state.currentByteDefaultFormat()\n    });\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}${suffix}`;\n}\n\n/**\n * Format the provided INSTANCE as an ordinal using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @return {string}\n */\nfunction formatOrdinal(instance, providedFormat, state) {\n    let ordinalFn = state.currentOrdinal();\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    let output = formatNumber({\n        instance,\n        providedFormat,\n        state\n    });\n    let ordinal = ordinalFn(instance._value);\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}${ordinal}`;\n}\n\n/**\n * Format the provided INSTANCE as a time HH:MM:SS.\n *\n * @param {Numbro} instance - numbro instance to format\n * @return {string}\n */\nfunction formatTime(instance) {\n    let hours = Math.floor(instance._value / 60 / 60);\n    let minutes = Math.floor((instance._value - (hours * 60 * 60)) / 60);\n    let seconds = Math.round(instance._value - (hours * 60 * 60) - (minutes * 60));\n    return `${hours}:${(minutes < 10) ? \"0\" : \"\"}${minutes}:${(seconds < 10) ? \"0\" : \"\"}${seconds}`;\n}\n\n/**\n * Format the provided INSTANCE as a percentage using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatPercentage(instance, providedFormat, state, numbro) {\n    let prefixSymbol = providedFormat.prefixSymbol;\n\n    let output = formatNumber({\n        instance: numbro(instance._value * 100),\n        providedFormat,\n        state\n    });\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    if (prefixSymbol) {\n        return `%${options.spaceSeparated ? \" \" : \"\"}${output}`;\n    }\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}%`;\n}\n\n/**\n * Format the provided INSTANCE as a percentage using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @return {string}\n */\nfunction formatCurrency(instance, providedFormat, state) {\n    const currentCurrency = state.currentCurrency();\n    let clonedFormat = Object.assign({}, providedFormat);\n    let options = Object.assign({}, defaultOptions, clonedFormat);\n    let decimalSeparator = undefined;\n    let space = \"\";\n    let average = !!options.totalLength || !!options.forceAverage || options.average;\n    let position = clonedFormat.currencyPosition || currentCurrency.position;\n    let symbol = clonedFormat.currencySymbol || currentCurrency.symbol;\n    const spaceSeparatedCurrency = options.spaceSeparatedCurrency !== void 0\n        ? options.spaceSeparatedCurrency : options.spaceSeparated;\n\n    if (clonedFormat.lowPrecision === undefined) {\n        clonedFormat.lowPrecision = false;\n    }\n\n    if (spaceSeparatedCurrency) {\n        space = \" \";\n    }\n\n    if (position === \"infix\") {\n        decimalSeparator = space + symbol + space;\n    }\n\n    let output = formatNumber({\n        instance,\n        providedFormat: clonedFormat,\n        state,\n        decimalSeparator\n    });\n\n    if (position === \"prefix\") {\n        if (instance._value < 0 && options.negative === \"sign\") {\n            output = `-${space}${symbol}${output.slice(1)}`;\n        } else if (instance._value > 0 && options.forceSign) {\n            output = `+${space}${symbol}${output.slice(1)}`;\n        } else {\n            output = symbol + space + output;\n        }\n    }\n\n    if (!position || position === \"postfix\") {\n        space = !options.spaceSeparatedAbbreviation && average ? \"\" : space;\n        output = output + space + symbol;\n    }\n\n    return output;\n}\n\n/**\n * Compute the average value out of VALUE.\n * The other parameters are computation options.\n *\n * @param {number} value - value to compute\n * @param {string} [forceAverage] - forced unit used to compute\n * @param {boolean} [lowPrecision=true] - reduce average precision\n * @param {{}} abbreviations - part of the language specification\n * @param {boolean} spaceSeparated - `true` if a space must be inserted between the value and the abbreviation\n * @param {number} [totalLength] - total length of the output including the characteristic and the mantissa\n * @param {function} roundingFunction - function used to round numbers\n * @return {{value: number, abbreviation: string, mantissaPrecision: number}}\n */\nfunction computeAverage({ value, forceAverage, lowPrecision = true, abbreviations, spaceSeparated = false, totalLength = 0, roundingFunction = Math.round }) {\n    let abbreviation = \"\";\n    let abs = Math.abs(value);\n    let mantissaPrecision = -1;\n\n    if (forceAverage && abbreviations[forceAverage] && powers[forceAverage]) {\n        abbreviation = abbreviations[forceAverage];\n        value = value / powers[forceAverage];\n    } else {\n        if (abs >= powers.trillion || (lowPrecision && roundingFunction(abs / powers.trillion) === 1)) {\n            // trillion\n            abbreviation = abbreviations.trillion;\n            value = value / powers.trillion;\n        } else if (abs < powers.trillion && abs >= powers.billion || (lowPrecision && roundingFunction(abs / powers.billion) === 1)) {\n            // billion\n            abbreviation = abbreviations.billion;\n            value = value / powers.billion;\n        } else if (abs < powers.billion && abs >= powers.million || (lowPrecision && roundingFunction(abs / powers.million) === 1)) {\n            // million\n            abbreviation = abbreviations.million;\n            value = value / powers.million;\n        } else if (abs < powers.million && abs >= powers.thousand || (lowPrecision && roundingFunction(abs / powers.thousand) === 1)) {\n            // thousand\n            abbreviation = abbreviations.thousand;\n            value = value / powers.thousand;\n        }\n    }\n\n    let optionalSpace = spaceSeparated ? \" \" : \"\";\n\n    if (abbreviation) {\n        abbreviation = optionalSpace + abbreviation;\n    }\n\n    if (totalLength) {\n        let isNegative = value < 0;\n        let characteristic = value.toString().split(\".\")[0];\n\n        let characteristicLength = isNegative\n            ? characteristic.length - 1\n            : characteristic.length;\n\n        mantissaPrecision = Math.max(totalLength - characteristicLength, 0);\n    }\n\n    return { value, abbreviation, mantissaPrecision };\n}\n\n/**\n * Compute an exponential form for VALUE, taking into account CHARACTERISTIC\n * if provided.\n * @param {number} value - value to compute\n * @param {number} [characteristicPrecision] - optional characteristic length\n * @return {{value: number, abbreviation: string}}\n */\nfunction computeExponential({ value, characteristicPrecision = 0 }) {\n    let [numberString, exponential] = value.toExponential().split(\"e\");\n    let number = +numberString;\n\n    if (!characteristicPrecision) {\n        return {\n            value: number,\n            abbreviation: `e${exponential}`\n        };\n    }\n\n    let characteristicLength = 1; // see `toExponential`\n\n    if (characteristicLength < characteristicPrecision) {\n        number = number * Math.pow(10, characteristicPrecision - characteristicLength);\n        exponential = +exponential - (characteristicPrecision - characteristicLength);\n        exponential = exponential >= 0 ? `+${exponential}` : exponential;\n    }\n\n    return {\n        value: number,\n        abbreviation: `e${exponential}`\n    };\n}\n\n/**\n * Return a string of NUMBER zero.\n *\n * @param {number} number - Length of the output\n * @return {string}\n */\nfunction zeroes(number) {\n    let result = \"\";\n    for (let i = 0; i < number; i++) {\n        result += \"0\";\n    }\n\n    return result;\n}\n\n/**\n * Return a string representing VALUE with a PRECISION-long mantissa.\n * This method is for large/small numbers only (a.k.a. including a \"e\").\n *\n * @param {number} value - number to precise\n * @param {number} precision - desired length for the mantissa\n * @return {string}\n */\nfunction toFixedLarge(value, precision) {\n    let result = value.toString();\n\n    let [base, exp] = result.split(\"e\");\n\n    let [characteristic, mantissa = \"\"] = base.split(\".\");\n\n    if (+exp > 0) {\n        result = characteristic + mantissa + zeroes(exp - mantissa.length);\n    } else {\n        let prefix = \".\";\n\n        if (+characteristic < 0) {\n            prefix = `-0${prefix}`;\n        } else {\n            prefix = `0${prefix}`;\n        }\n\n        let suffix = (zeroes(-exp - 1) + Math.abs(characteristic) + mantissa).substr(0, precision);\n        if (suffix.length < precision) {\n            suffix += zeroes(precision - suffix.length);\n        }\n        result = prefix + suffix;\n    }\n\n    if (+exp > 0 && precision > 0) {\n        result += `.${zeroes(precision)}`;\n    }\n\n    return result;\n}\n\n/**\n * Return a string representing VALUE with a PRECISION-long mantissa.\n *\n * @param {number} value - number to precise\n * @param {number} precision - desired length for the mantissa\n * @param {function} roundingFunction - rounding function to be used\n * @return {string}\n */\nfunction toFixed(value, precision, roundingFunction = Math.round) {\n    if (value.toString().indexOf(\"e\") !== -1) {\n        return toFixedLarge(value, precision);\n    }\n\n    const n = new BigNumber(roundingFunction(+`${value}e+${precision}`) / (Math.pow(10, precision)));\n    return n.toFixed(precision);\n}\n\n/**\n * Return the current OUTPUT with a mantissa precision of PRECISION.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} optionalMantissa - if `true`, the mantissa is omitted when it's only zeroes\n * @param {number} precision - desired precision of the mantissa\n * @param {boolean} trim - if `true`, trailing zeroes are removed from the mantissa\n * @return {string}\n */\nfunction setMantissaPrecision(output, value, optionalMantissa, precision, trim, roundingFunction) {\n    if (precision === -1) {\n        return output;\n    }\n\n    let result = toFixed(value, precision, roundingFunction);\n    let [currentCharacteristic, currentMantissa = \"\"] = result.toString().split(\".\");\n\n    if (currentMantissa.match(/^0+$/) && (optionalMantissa || trim)) {\n        return currentCharacteristic;\n    }\n\n    let hasTrailingZeroes = currentMantissa.match(/0+$/);\n    if (trim && hasTrailingZeroes) {\n        return `${currentCharacteristic}.${currentMantissa.toString().slice(0, hasTrailingZeroes.index)}`;\n    }\n\n    return result.toString();\n}\n\n/**\n * Return the current OUTPUT with a characteristic precision of PRECISION.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} optionalCharacteristic - `true` if the characteristic is omitted when it's only zeroes\n * @param {number} precision - desired precision of the characteristic\n * @return {string}\n */\nfunction setCharacteristicPrecision(output, value, optionalCharacteristic, precision) {\n    let result = output;\n    let [currentCharacteristic, currentMantissa] = result.toString().split(\".\");\n\n    if (currentCharacteristic.match(/^-?0$/) && optionalCharacteristic) {\n        if (!currentMantissa) {\n            return currentCharacteristic.replace(\"0\", \"\");\n        }\n\n        return `${currentCharacteristic.replace(\"0\", \"\")}.${currentMantissa}`;\n    }\n\n    const hasNegativeSign = value < 0 && currentCharacteristic.indexOf(\"-\") === 0;\n    if (hasNegativeSign) {\n            // Remove the negative sign\n            currentCharacteristic = currentCharacteristic.slice(1);\n            result = result.slice(1);\n    }\n\n    if (currentCharacteristic.length < precision) {\n        let missingZeros = precision - currentCharacteristic.length;\n        for (let i = 0; i < missingZeros; i++) {\n            result = `0${result}`;\n        }\n    }\n\n    if (hasNegativeSign) {\n        // Add back the minus sign\n        result = `-${result}`;\n    }\n    return result.toString();\n}\n\n/**\n * Return the indexes where are the group separations after splitting\n * `totalLength` in group of `groupSize` size.\n * Important: we start grouping from the right hand side.\n *\n * @param {number} totalLength - total length of the characteristic to split\n * @param {number} groupSize - length of each group\n * @return {[number]}\n */\nfunction indexesOfGroupSpaces(totalLength, groupSize) {\n    let result = [];\n    let counter = 0;\n    for (let i = totalLength; i > 0; i--) {\n        if (counter === groupSize) {\n            result.unshift(i);\n            counter = 0;\n        }\n        counter++;\n    }\n\n    return result;\n}\n\n/**\n * Replace the decimal separator with DECIMALSEPARATOR and insert thousand\n * separators.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} thousandSeparated - `true` if the characteristic must be separated\n * @param {globalState} state - shared state of the library\n * @param {string} decimalSeparator - string to use as decimal separator\n * @return {string}\n */\nfunction replaceDelimiters(output, value, thousandSeparated, state, decimalSeparator) {\n    let delimiters = state.currentDelimiters();\n    let thousandSeparator = delimiters.thousands;\n    decimalSeparator = decimalSeparator || delimiters.decimal;\n    let thousandsSize = delimiters.thousandsSize || 3;\n\n    let result = output.toString();\n    let characteristic = result.split(\".\")[0];\n    let mantissa = result.split(\".\")[1];\n    const hasNegativeSign = value < 0 && characteristic.indexOf(\"-\") === 0;\n\n    if (thousandSeparated) {\n        if (hasNegativeSign) {\n            // Remove the negative sign\n            characteristic = characteristic.slice(1);\n        }\n\n        let indexesToInsertThousandDelimiters = indexesOfGroupSpaces(characteristic.length, thousandsSize);\n        indexesToInsertThousandDelimiters.forEach((position, index) => {\n            characteristic = characteristic.slice(0, position + index) + thousandSeparator + characteristic.slice(position + index);\n        });\n\n        if (hasNegativeSign) {\n            // Add back the negative sign\n            characteristic = `-${characteristic}`;\n        }\n    }\n\n    if (!mantissa) {\n        result = characteristic;\n    } else {\n        result = characteristic + decimalSeparator + mantissa;\n    }\n    return result;\n}\n\n/**\n * Insert the provided ABBREVIATION at the end of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} abbreviation - abbreviation to append\n * @return {*}\n */\nfunction insertAbbreviation(output, abbreviation) {\n    return output + abbreviation;\n}\n\n/**\n * Insert the positive/negative sign according to the NEGATIVE flag.\n * If the value is negative but still output as 0, the negative sign is removed.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {string} negative - flag for the negative form (\"sign\" or \"parenthesis\")\n * @return {*}\n */\nfunction insertSign(output, value, negative) {\n    if (value === 0) {\n        return output;\n    }\n\n    if (+output === 0) {\n        return output.replace(\"-\", \"\");\n    }\n\n    if (value > 0) {\n        return `+${output}`;\n    }\n\n    if (negative === \"sign\") {\n        return output;\n    }\n\n    return `(${output.replace(\"-\", \"\")})`;\n}\n\n/**\n * Insert the provided PREFIX at the start of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} prefix - abbreviation to prepend\n * @return {*}\n */\nfunction insertPrefix(output, prefix) {\n    return prefix + output;\n}\n\n/**\n * Insert the provided POSTFIX at the end of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} postfix - abbreviation to append\n * @return {*}\n */\nfunction insertPostfix(output, postfix) {\n    return output + postfix;\n}\n\n/**\n * Format the provided INSTANCE as a number using the PROVIDEDFORMAT,\n * and the STATE.\n * This is the key method of the framework!\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} [providedFormat] - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param {string} decimalSeparator - string to use as decimal separator\n * @param {{}} defaults - Set of default values used for formatting\n * @return {string}\n */\nfunction formatNumber({ instance, providedFormat, state = globalState, decimalSeparator, defaults = state.currentDefaults() }) {\n    let value = instance._value;\n\n    if (value === 0 && state.hasZeroFormat()) {\n        return state.getZeroFormat();\n    }\n\n    if (!isFinite(value)) {\n        return value.toString();\n    }\n\n    let options = Object.assign({}, defaultOptions, defaults, providedFormat);\n\n    let totalLength = options.totalLength;\n    let characteristicPrecision = totalLength ? 0 : options.characteristic;\n    let optionalCharacteristic = options.optionalCharacteristic;\n    let forceAverage = options.forceAverage;\n    let lowPrecision = options.lowPrecision;\n    let average = !!totalLength || !!forceAverage || options.average;\n\n    // default when averaging is to chop off decimals\n    let mantissaPrecision = totalLength ? -1 : (average && providedFormat.mantissa === undefined ? 0 : options.mantissa);\n    let optionalMantissa = totalLength ? false : (providedFormat.optionalMantissa === undefined ? mantissaPrecision === -1 : options.optionalMantissa);\n    let trimMantissa = options.trimMantissa;\n    let thousandSeparated = options.thousandSeparated;\n    let spaceSeparated = options.spaceSeparated;\n    let negative = options.negative;\n    let forceSign = options.forceSign;\n    let exponential = options.exponential;\n    let roundingFunction = options.roundingFunction;\n\n    let abbreviation = \"\";\n    if (average) {\n        let data = computeAverage({\n            value,\n            forceAverage,\n            lowPrecision,\n            abbreviations: state.currentAbbreviations(),\n            spaceSeparated,\n            roundingFunction,\n            totalLength\n        });\n\n        value = data.value;\n        abbreviation += data.abbreviation;\n\n        if (totalLength) {\n            mantissaPrecision = data.mantissaPrecision;\n        }\n    }\n\n    if (exponential) {\n        let data = computeExponential({\n            value,\n            characteristicPrecision\n        });\n\n        value = data.value;\n        abbreviation = data.abbreviation + abbreviation;\n    }\n\n    let output = setMantissaPrecision(value.toString(), value, optionalMantissa, mantissaPrecision, trimMantissa, roundingFunction);\n    output = setCharacteristicPrecision(output, value, optionalCharacteristic, characteristicPrecision);\n    output = replaceDelimiters(output, value, thousandSeparated, state, decimalSeparator);\n\n    if (average || exponential) {\n        output = insertAbbreviation(output, abbreviation);\n    }\n\n    if (forceSign || value < 0) {\n        output = insertSign(output, value, negative);\n    }\n\n    return output;\n}\n\n/**\n * If FORMAT is non-null and not just an output, return FORMAT.\n * Return DEFAULTFORMAT otherwise.\n *\n * @param providedFormat\n * @param defaultFormat\n */\nfunction formatOrDefault(providedFormat, defaultFormat) {\n    if (!providedFormat) {\n        return defaultFormat;\n    }\n\n    let keys = Object.keys(providedFormat);\n    if (keys.length === 1 && keys[0] === \"output\") {\n        return defaultFormat;\n    }\n\n    return providedFormat;\n}\n\nmodule.exports = (numbro) => ({\n    format: (...args) => format(...args, numbro),\n    getByteUnit: (...args) => getByteUnit(...args, numbro),\n    getBinaryByteUnit: (...args) => getBinaryByteUnit(...args, numbro),\n    getDecimalByteUnit: (...args) => getDecimalByteUnit(...args, numbro),\n    formatOrDefault\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst enUS = require(\"./en-US\");\nconst validating = require(\"./validating\");\nconst parsing = require(\"./parsing\");\n\nlet state = {};\n\nlet currentLanguageTag = undefined;\nlet languages = {};\n\nlet zeroFormat = null;\n\nlet globalDefaults = {};\n\nfunction chooseLanguage(tag) { currentLanguageTag = tag; }\n\nfunction currentLanguageData() { return languages[currentLanguageTag]; }\n\n/**\n * Return all the register languages\n *\n * @return {{}}\n */\nstate.languages = () => Object.assign({}, languages);\n\n//\n// Current language accessors\n//\n\n/**\n * Return the current language tag\n *\n * @return {string}\n */\nstate.currentLanguage = () => currentLanguageTag;\n\n/**\n * Return the current language bytes data\n *\n * @return {{}}\n */\nstate.currentBytes = () => currentLanguageData().bytes || {};\n\n/**\n * Return the current language currency data\n *\n * @return {{}}\n */\nstate.currentCurrency = () => currentLanguageData().currency;\n\n/**\n * Return the current language abbreviations data\n *\n * @return {{}}\n */\nstate.currentAbbreviations = () => currentLanguageData().abbreviations;\n\n/**\n * Return the current language delimiters data\n *\n * @return {{}}\n */\nstate.currentDelimiters = () => currentLanguageData().delimiters;\n\n/**\n * Return the current language ordinal function\n *\n * @return {function}\n */\nstate.currentOrdinal = () => currentLanguageData().ordinal;\n\n//\n// Defaults\n//\n\n/**\n * Return the current formatting defaults.\n * First use the current language default, then fallback to the globally defined defaults.\n *\n * @return {{}}\n */\nstate.currentDefaults = () => Object.assign({}, currentLanguageData().defaults, globalDefaults);\n\n/**\n * Return the ordinal default-format.\n * First use the current language ordinal default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentOrdinalDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().ordinalFormat);\n\n/**\n * Return the byte default-format.\n * First use the current language byte default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentByteDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().byteFormat);\n\n/**\n * Return the percentage default-format.\n * First use the current language percentage default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentPercentageDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().percentageFormat);\n\n/**\n * Return the currency default-format.\n * First use the current language currency default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentCurrencyDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().currencyFormat);\n\n/**\n * Return the time default-format.\n * First use the current language currency default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentTimeDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().timeFormat);\n\n/**\n * Set the global formatting defaults.\n *\n * @param {{}|string} format - formatting options to use as defaults\n */\nstate.setDefaults = (format) => {\n    format = parsing.parseFormat(format);\n    if (validating.validateFormat(format)) {\n        globalDefaults = format;\n    }\n};\n\n//\n// Zero format\n//\n\n/**\n * Return the format string for 0.\n *\n * @return {string}\n */\nstate.getZeroFormat = () => zeroFormat;\n\n/**\n * Set a STRING to output when the value is 0.\n *\n * @param {{}|string} string - string to set\n */\nstate.setZeroFormat = (string) => zeroFormat = typeof(string) === \"string\" ? string : null;\n\n/**\n * Return true if a format for 0 has been set already.\n *\n * @return {boolean}\n */\nstate.hasZeroFormat = () => zeroFormat !== null;\n\n//\n// Getters/Setters\n//\n\n/**\n * Return the language data for the provided TAG.\n * Return the current language data if no tag is provided.\n *\n * Throw an error if the tag doesn't match any registered language.\n *\n * @param {string} [tag] - language tag of a registered language\n * @return {{}}\n */\nstate.languageData = (tag) => {\n    if (tag) {\n        if (languages[tag]) {\n            return languages[tag];\n        }\n        throw new Error(`Unknown tag \"${tag}\"`);\n    }\n\n    return currentLanguageData();\n};\n\n/**\n * Register the provided DATA as a language if and only if the data is valid.\n * If the data is not valid, an error is thrown.\n *\n * When USELANGUAGE is true, the registered language is then used.\n *\n * @param {{}} data - language data to register\n * @param {boolean} [useLanguage] - `true` if the provided data should become the current language\n */\nstate.registerLanguage = (data, useLanguage = false) => {\n    if (!validating.validateLanguage(data)) {\n        throw new Error(\"Invalid language data\");\n    }\n\n    languages[data.languageTag] = data;\n\n    if (useLanguage) {\n        chooseLanguage(data.languageTag);\n    }\n};\n\n/**\n * Set the current language according to TAG.\n * If TAG doesn't match a registered language, another language matching\n * the \"language\" part of the tag (according to BCP47: https://tools.ietf.org/rfc/bcp/bcp47.txt).\n * If none, the FALLBACKTAG is used. If the FALLBACKTAG doesn't match a register language,\n * `en-US` is finally used.\n *\n * @param tag\n * @param fallbackTag\n */\nstate.setLanguage = (tag, fallbackTag = enUS.languageTag) => {\n    if (!languages[tag]) {\n        let suffix = tag.split(\"-\")[0];\n\n        let matchingLanguageTag = Object.keys(languages).find(each => {\n            return each.split(\"-\")[0] === suffix;\n        });\n\n        if (!languages[matchingLanguageTag]) {\n            chooseLanguage(fallbackTag);\n            return;\n        }\n\n        chooseLanguage(matchingLanguageTag);\n        return;\n    }\n\n    chooseLanguage(tag);\n};\n\nstate.registerLanguage(enUS);\ncurrentLanguageTag = enUS.languageTag;\n\nmodule.exports = state;\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Load languages matching TAGS. Silently pass over the failing load.\n *\n * We assume here that we are in a node environment, so we don't check for it.\n * @param {[String]} tags - list of tags to load\n * @param {Numbro} numbro - the numbro singleton\n */\nfunction loadLanguagesInNode(tags, numbro) {\n    tags.forEach((tag) => {\n        let data = undefined;\n        try {\n            data = require(`../languages/${tag}`);\n        } catch (e) {\n            console.error(`Unable to load \"${tag}\". No matching language file found.`); // eslint-disable-line no-console\n        }\n\n        if (data) {\n            numbro.registerLanguage(data);\n        }\n    });\n}\n\nmodule.exports = (numbro) => ({\n    loadLanguagesInNode: (tags) => loadLanguagesInNode(tags, numbro)\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst BigNumber = require(\"bignumber.js\");\n\n/**\n * Add a number or a numbro to N.\n *\n * @param {Numbro} n - augend\n * @param {number|Numbro} other - addend\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction add(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.plus(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Subtract a number or a numbro from N.\n *\n * @param {Numbro} n - minuend\n * @param {number|Numbro} other - subtrahend\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction subtract(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.minus(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Multiply N by a number or a numbro.\n *\n * @param {Numbro} n - multiplicand\n * @param {number|Numbro} other - multiplier\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction multiply(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.times(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Divide N by a number or a numbro.\n *\n * @param {Numbro} n - dividend\n * @param {number|Numbro} other - divisor\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction divide(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.dividedBy(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Set N to the OTHER (or the value of OTHER when it's a numbro instance).\n *\n * @param {Numbro} n - numbro instance to mutate\n * @param {number|Numbro} other - new value to assign to N\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction set (n, other, numbro) {\n    let value = other;\n\n    if (numbro.isNumbro(other)) {\n        value = other._value;\n    }\n\n    n._value = value;\n    return n;\n}\n\n/**\n * Return the distance between N and OTHER.\n *\n * @param {Numbro} n\n * @param {number|Numbro} other\n * @param {numbro} numbro - numbro singleton\n * @return {number}\n */\nfunction difference(n, other, numbro) {\n    let clone = numbro(n._value);\n    subtract(clone, other, numbro);\n\n    return Math.abs(clone._value);\n}\n\nmodule.exports = numbro => ({\n    add: (n, other) => add(n, other, numbro),\n    subtract: (n, other) => subtract(n, other, numbro),\n    multiply: (n, other) => multiply(n, other, numbro),\n    divide: (n, other) => divide(n, other, numbro),\n    set: (n, other) => set(n, other, numbro),\n    difference: (n, other) => difference(n, other, numbro),\n    BigNumber: BigNumber\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst VERSION = \"2.3.6\";\n\nconst globalState = require(\"./globalState\");\nconst validator = require(\"./validating\");\nconst loader = require(\"./loading\")(numbro);\nconst unformatter = require(\"./unformatting\");\nlet formatter = require(\"./formatting\")(numbro);\nlet manipulate = require(\"./manipulating\")(numbro);\nconst parsing = require(\"./parsing\");\n\nclass Numbro {\n    constructor(number) {\n        this._value = number;\n    }\n\n    clone() { return numbro(this._value); }\n\n    format(format = {}) { return formatter.format(this, format); }\n\n    formatCurrency(format) {\n        if (typeof format === \"string\") {\n            format = parsing.parseFormat(format);\n        }\n        format = formatter.formatOrDefault(format, globalState.currentCurrencyDefaultFormat());\n        format.output = \"currency\";\n        return formatter.format(this, format);\n    }\n\n    formatTime(format = {}) {\n        format.output = \"time\";\n        return formatter.format(this, format);\n    }\n\n    binaryByteUnits() { return formatter.getBinaryByteUnit(this);}\n\n    decimalByteUnits() { return formatter.getDecimalByteUnit(this);}\n\n    byteUnits() { return formatter.getByteUnit(this);}\n\n    difference(other) { return manipulate.difference(this, other); }\n\n    add(other) { return manipulate.add(this, other); }\n\n    subtract(other) { return manipulate.subtract(this, other); }\n\n    multiply(other) { return manipulate.multiply(this, other); }\n\n    divide(other) { return manipulate.divide(this, other); }\n\n    set(input) { return manipulate.set(this, normalizeInput(input)); }\n\n    value() { return this._value; }\n\n    valueOf() { return this._value; }\n}\n\n/**\n * Make its best to convert input into a number.\n *\n * @param {numbro|string|number} input - Input to convert\n * @return {number}\n */\nfunction normalizeInput(input) {\n    let result = input;\n    if (numbro.isNumbro(input)) {\n        result = input._value;\n    } else if (typeof input === \"string\") {\n        result = numbro.unformat(input);\n    } else if (isNaN(input)) {\n        result = NaN;\n    }\n\n    return result;\n}\n\nfunction numbro(input) {\n    return new Numbro(normalizeInput(input));\n}\n\nnumbro.version = VERSION;\n\nnumbro.isNumbro = function(object) {\n    return object instanceof Numbro;\n};\n\n//\n// `numbro` static methods\n//\n\nnumbro.language = globalState.currentLanguage;\nnumbro.registerLanguage = globalState.registerLanguage;\nnumbro.setLanguage = globalState.setLanguage;\nnumbro.languages = globalState.languages;\nnumbro.languageData = globalState.languageData;\nnumbro.zeroFormat = globalState.setZeroFormat;\nnumbro.defaultFormat = globalState.currentDefaults;\nnumbro.setDefaults = globalState.setDefaults;\nnumbro.defaultCurrencyFormat = globalState.currentCurrencyDefaultFormat;\nnumbro.validate = validator.validate;\nnumbro.loadLanguagesInNode = loader.loadLanguagesInNode;\nnumbro.unformat = unformatter.unformat;\nnumbro.BigNumber = manipulate.BigNumber;\n\nmodule.exports = numbro;\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Parse the format STRING looking for a prefix. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parsePrefix(string, result) {\n    let match = string.match(/^{([^}]*)}/);\n    if (match) {\n        result.prefix = match[1];\n        return string.slice(match[0].length);\n    }\n\n    return string;\n}\n\n/**\n * Parse the format STRING looking for a postfix. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parsePostfix(string, result) {\n    let match = string.match(/{([^}]*)}$/);\n    if (match) {\n        result.postfix = match[1];\n\n        return string.slice(0, -match[0].length);\n    }\n\n    return string;\n}\n\n/**\n * Parse the format STRING looking for the output value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseOutput(string, result) {\n    if (string.indexOf(\"$\") !== -1) {\n        result.output = \"currency\";\n        return;\n    }\n\n    if (string.indexOf(\"%\") !== -1) {\n        result.output = \"percent\";\n        return;\n    }\n\n    if (string.indexOf(\"bd\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"general\";\n        return;\n    }\n\n    if (string.indexOf(\"b\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"binary\";\n        return;\n\n    }\n\n    if (string.indexOf(\"d\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"decimal\";\n        return;\n\n    }\n\n    if (string.indexOf(\":\") !== -1) {\n        result.output = \"time\";\n        return;\n    }\n\n    if (string.indexOf(\"o\") !== -1) {\n        result.output = \"ordinal\";\n    }\n}\n\n/**\n * Parse the format STRING looking for the thousand separated value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseThousandSeparated(string, result) {\n    if (string.indexOf(\",\") !== -1) {\n        result.thousandSeparated = true;\n    }\n}\n\n/**\n * Parse the format STRING looking for the space separated value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseSpaceSeparated(string, result) {\n    if (string.indexOf(\" \") !== -1) {\n        result.spaceSeparated = true;\n        result.spaceSeparatedCurrency = true;\n\n        if (result.average || result.forceAverage) {\n            result.spaceSeparatedAbbreviation = true;\n        }\n    }\n}\n\n/**\n * Parse the format STRING looking for the total length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseTotalLength(string, result) {\n    let match = string.match(/[1-9]+[0-9]*/);\n\n    if (match) {\n        result.totalLength = +match[0];\n    }\n}\n\n/**\n * Parse the format STRING looking for the characteristic length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseCharacteristic(string, result) {\n    let characteristic = string.split(\".\")[0];\n    let match = characteristic.match(/0+/);\n    if (match) {\n        result.characteristic = match[0].length;\n    }\n}\n\n/**\n * Parse the format STRING looking for the mantissa length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseMantissa(string, result) {\n    let mantissa = string.split(\".\")[1];\n    if (mantissa) {\n        let match = mantissa.match(/0+/);\n        if (match) {\n            result.mantissa = match[0].length;\n        }\n    }\n}\n\n/**\n * Parse the format STRING looking for a trimmed mantissa. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseTrimMantissa(string, result) {\n    const mantissa = string.split(\".\")[1];\n    if (mantissa) {\n        result.trimMantissa = mantissa.indexOf(\"[\") !== -1;\n    }\n}\n\n/**\n * Parse the format STRING looking for the average value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseAverage(string, result) {\n    if (string.indexOf(\"a\") !== -1) {\n        result.average = true;\n    }\n}\n\n/**\n * Parse the format STRING looking for a forced average precision. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseForceAverage(string, result) {\n    if (string.indexOf(\"K\") !== -1) {\n        result.forceAverage = \"thousand\";\n    } else if (string.indexOf(\"M\") !== -1) {\n        result.forceAverage = \"million\";\n    } else if (string.indexOf(\"B\") !== -1) {\n        result.forceAverage = \"billion\";\n    } else if (string.indexOf(\"T\") !== -1) {\n        result.forceAverage = \"trillion\";\n    }\n}\n\n/**\n * Parse the format STRING finding if the mantissa is optional. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseOptionalMantissa(string, result) {\n    if (string.match(/\\[\\.]/)) {\n        result.optionalMantissa = true;\n    } else if (string.match(/\\./)) {\n        result.optionalMantissa = false;\n    }\n}\n\n/**\n * Parse the format STRING finding if the characteristic is optional. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseOptionalCharacteristic(string, result) {\n    if (string.indexOf(\".\") !== -1) {\n        let characteristic = string.split(\".\")[0];\n        result.optionalCharacteristic = characteristic.indexOf(\"0\") === -1;\n    }\n}\n\n/**\n * Parse the format STRING looking for the negative format. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseNegative(string, result) {\n    if (string.match(/^\\+?\\([^)]*\\)$/)) {\n        result.negative = \"parenthesis\";\n    }\n    if (string.match(/^\\+?-/)) {\n        result.negative = \"sign\";\n    }\n}\n\n/**\n * Parse the format STRING finding if the sign is mandatory. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseForceSign(string, result) {\n    if (string.match(/^\\+/)) {\n        result.forceSign = true;\n    }\n}\n\n/**\n * Parse the format STRING and accumulating the values ie RESULT.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {NumbroFormat} - format\n */\nfunction parseFormat(string, result = {}) {\n    if (typeof string !== \"string\") {\n        return string;\n    }\n\n    string = parsePrefix(string, result);\n    string = parsePostfix(string, result);\n    parseOutput(string, result);\n    parseTotalLength(string, result);\n    parseCharacteristic(string, result);\n    parseOptionalCharacteristic(string, result);\n    parseAverage(string, result);\n    parseForceAverage(string, result);\n    parseMantissa(string, result);\n    parseOptionalMantissa(string, result);\n    parseTrimMantissa(string, result);\n    parseThousandSeparated(string, result);\n    parseSpaceSeparated(string, result);\n    parseNegative(string, result);\n    parseForceSign(string, result);\n\n    return result;\n}\n\nmodule.exports = {\n    parseFormat\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst allSuffixes = [\n    {key: \"ZiB\", factor: Math.pow(1024, 7)},\n    {key: \"ZB\", factor: Math.pow(1000, 7)},\n    {key: \"YiB\", factor: Math.pow(1024, 8)},\n    {key: \"YB\", factor: Math.pow(1000, 8)},\n    {key: \"TiB\", factor: Math.pow(1024, 4)},\n    {key: \"TB\", factor: Math.pow(1000, 4)},\n    {key: \"PiB\", factor: Math.pow(1024, 5)},\n    {key: \"PB\", factor: Math.pow(1000, 5)},\n    {key: \"MiB\", factor: Math.pow(1024, 2)},\n    {key: \"MB\", factor: Math.pow(1000, 2)},\n    {key: \"KiB\", factor: Math.pow(1024, 1)},\n    {key: \"KB\", factor: Math.pow(1000, 1)},\n    {key: \"GiB\", factor: Math.pow(1024, 3)},\n    {key: \"GB\", factor: Math.pow(1000, 3)},\n    {key: \"EiB\", factor: Math.pow(1024, 6)},\n    {key: \"EB\", factor: Math.pow(1000, 6)},\n    {key: \"B\", factor: 1}\n];\n\n/**\n * Generate a RegExp where S get all RegExp specific characters escaped.\n *\n * @param {string} s - string representing a RegExp\n * @return {string}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\n\n/**\n * Recursively compute the unformatted value.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @param {function} ordinal - function used to generate an ordinal out of a number\n * @param {string} zeroFormat - string representing zero\n * @param {*} abbreviations - abbreviations used while generating the inputString\n * @param {NumbroFormat} format - format used while generating the inputString\n * @return {number|undefined}\n */\nfunction computeUnformattedValue(inputString, delimiters, currencySymbol = \"\", ordinal, zeroFormat, abbreviations, format) {\n    if (!isNaN(+inputString)) {\n        return +inputString;\n    }\n\n    let stripped = \"\";\n    // Negative\n\n    let newInput = inputString.replace(/(^[^(]*)\\((.*)\\)([^)]*$)/, \"$1$2$3\");\n\n    if (newInput !== inputString) {\n        return -1 * computeUnformattedValue(newInput, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n    }\n\n    // Byte\n\n    for (let i = 0; i < allSuffixes.length; i++) {\n        let suffix = allSuffixes[i];\n        stripped = inputString.replace(RegExp(`([0-9 ])(${suffix.key})$`), \"$1\");\n\n        if (stripped !== inputString) {\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) * suffix.factor;\n        }\n    }\n\n    // Percent\n\n    stripped = inputString.replace(\"%\", \"\");\n\n    if (stripped !== inputString) {\n        return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) / 100;\n    }\n\n    // Ordinal\n\n    let possibleOrdinalValue = parseFloat(inputString);\n\n    if (isNaN(possibleOrdinalValue)) {\n        return undefined;\n    }\n\n    let ordinalString = ordinal(possibleOrdinalValue);\n    if (ordinalString && ordinalString !== \".\") { // if ordinal is \".\" it will be caught next round in the +inputString\n        stripped = inputString.replace(new RegExp(`${escapeRegExp(ordinalString)}$`), \"\");\n\n        if (stripped !== inputString) {\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n        }\n    }\n\n    // Average\n\n    let inversedAbbreviations = {};\n    Object.keys(abbreviations).forEach((key) => {\n        inversedAbbreviations[abbreviations[key]] = key;\n    });\n\n    let abbreviationValues = Object.keys(inversedAbbreviations).sort().reverse();\n    let numberOfAbbreviations = abbreviationValues.length;\n\n    for (let i = 0; i < numberOfAbbreviations; i++) {\n        let value = abbreviationValues[i];\n        let key = inversedAbbreviations[value];\n\n        stripped = inputString.replace(value, \"\");\n        if (stripped !== inputString) {\n            let factor = undefined;\n            switch (key) { // eslint-disable-line default-case\n                case \"thousand\":\n                    factor = Math.pow(10, 3);\n                    break;\n                case \"million\":\n                    factor = Math.pow(10, 6);\n                    break;\n                case \"billion\":\n                    factor = Math.pow(10, 9);\n                    break;\n                case \"trillion\":\n                    factor = Math.pow(10, 12);\n                    break;\n            }\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) * factor;\n        }\n    }\n\n    return undefined;\n}\n\n/**\n * Removes in one pass all formatting symbols.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @return {string}\n */\nfunction removeFormattingSymbols(inputString, delimiters, currencySymbol = \"\") {\n    // Currency\n\n    let stripped = inputString.replace(currencySymbol, \"\");\n\n    // Thousand separators\n\n    stripped = stripped.replace(new RegExp(`([0-9])${escapeRegExp(delimiters.thousands)}([0-9])`, \"g\"), \"$1$2\");\n\n    // Decimal\n\n    stripped = stripped.replace(delimiters.decimal, \".\");\n\n    return stripped;\n}\n\n/**\n * Unformat a numbro-generated string to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @param {function} ordinal - function used to generate an ordinal out of a number\n * @param {string} zeroFormat - string representing zero\n * @param {*} abbreviations - abbreviations used while generating the inputString\n * @param {NumbroFormat} format - format used while generating the inputString\n * @return {number|undefined}\n */\nfunction unformatValue(inputString, delimiters, currencySymbol = \"\", ordinal, zeroFormat, abbreviations, format) {\n    if (inputString === \"\") {\n        return undefined;\n    }\n\n    // Zero Format\n\n    if (inputString === zeroFormat) {\n        return 0;\n    }\n\n    let value = removeFormattingSymbols(inputString, delimiters, currencySymbol);\n    return computeUnformattedValue(value, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n}\n\n/**\n * Check if the INPUTSTRING represents a time.\n *\n * @param {string} inputString - string to check\n * @param {*} delimiters - Delimiters used while generating the inputString\n * @return {boolean}\n */\nfunction matchesTime(inputString, delimiters) {\n    let separators = inputString.indexOf(\":\") && delimiters.thousands !== \":\";\n\n    if (!separators) {\n        return false;\n    }\n\n    let segments = inputString.split(\":\");\n    if (segments.length !== 3) {\n        return false;\n    }\n\n    let hours = +segments[0];\n    let minutes = +segments[1];\n    let seconds = +segments[2];\n\n    return !isNaN(hours) && !isNaN(minutes) && !isNaN(seconds);\n}\n\n/**\n * Unformat a numbro-generated string representing a time to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @return {number}\n */\nfunction unformatTime(inputString) {\n    let segments = inputString.split(\":\");\n\n    let hours = +segments[0];\n    let minutes = +segments[1];\n    let seconds = +segments[2];\n\n    return seconds + 60 * minutes + 3600 * hours;\n}\n\n/**\n * Unformat a numbro-generated string to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @param {NumbroFormat} format - format used  while generating the inputString\n * @return {number}\n */\nfunction unformat(inputString, format) {\n    // Avoid circular references\n    const globalState = require(\"./globalState\");\n\n    let delimiters = globalState.currentDelimiters();\n    let currencySymbol = globalState.currentCurrency().symbol;\n    let ordinal = globalState.currentOrdinal();\n    let zeroFormat = globalState.getZeroFormat();\n    let abbreviations = globalState.currentAbbreviations();\n\n    let value = undefined;\n\n    if (typeof inputString === \"string\") {\n        if (matchesTime(inputString, delimiters)) {\n            value = unformatTime(inputString);\n        } else {\n            value = unformatValue(inputString, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n        }\n    } else if (typeof inputString === \"number\") {\n        value = inputString;\n    } else {\n        return undefined;\n    }\n\n    if (value === undefined) {\n        return undefined;\n    }\n\n    return value;\n}\n\nmodule.exports = {\n    unformat\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nlet unformatter = require(\"./unformatting\");\n\n// Simplified regexp supporting only `language`, `script`, and `region`\nconst bcp47RegExp = /^[a-z]{2,3}(-[a-zA-Z]{4})?(-([A-Z]{2}|[0-9]{3}))?$/;\n\nconst validOutputValues = [\n    \"currency\",\n    \"percent\",\n    \"byte\",\n    \"time\",\n    \"ordinal\",\n    \"number\"\n];\n\nconst validForceAverageValues = [\n    \"trillion\",\n    \"billion\",\n    \"million\",\n    \"thousand\"\n];\n\nconst validCurrencyPosition = [\n    \"prefix\",\n    \"infix\",\n    \"postfix\"\n];\n\nconst validNegativeValues = [\n    \"sign\",\n    \"parenthesis\"\n];\n\nconst validMandatoryAbbreviations = {\n    type: \"object\",\n    children: {\n        thousand: {\n            type: \"string\",\n            mandatory: true\n        },\n        million: {\n            type: \"string\",\n            mandatory: true\n        },\n        billion: {\n            type: \"string\",\n            mandatory: true\n        },\n        trillion: {\n            type: \"string\",\n            mandatory: true\n        }\n    },\n    mandatory: true\n};\n\nconst validAbbreviations = {\n    type: \"object\",\n    children: {\n        thousand: \"string\",\n        million: \"string\",\n        billion: \"string\",\n        trillion: \"string\"\n    }\n};\n\nconst validBaseValues = [\n    \"decimal\",\n    \"binary\",\n    \"general\"\n];\n\nconst validFormat = {\n    output: {\n        type: \"string\",\n        validValues: validOutputValues\n    },\n    base: {\n        type: \"string\",\n        validValues: validBaseValues,\n        restriction: (number, format) => format.output === \"byte\",\n        message: \"`base` must be provided only when the output is `byte`\",\n        mandatory: (format) => format.output === \"byte\"\n    },\n    characteristic: {\n        type: \"number\",\n        restriction: (number) => number >= 0,\n        message: \"value must be positive\"\n    },\n    prefix: \"string\",\n    postfix: \"string\",\n    forceAverage: {\n        type: \"string\",\n        validValues: validForceAverageValues\n    },\n    average: \"boolean\",\n    lowPrecision: {\n        type: \"boolean\",\n        restriction: (number, format) => format.average === true,\n        message: \"`lowPrecision` must be provided only when the option `average` is set\"\n    },\n    currencyPosition: {\n        type: \"string\",\n        validValues: validCurrencyPosition\n    },\n    currencySymbol: \"string\",\n    totalLength: {\n        type: \"number\",\n        restrictions: [\n            {\n                restriction: (number) => number >= 0,\n                message: \"value must be positive\"\n            },\n            {\n                restriction: (number, format) => !format.exponential,\n                message: \"`totalLength` is incompatible with `exponential`\"\n            }\n        ]\n    },\n    mantissa: {\n        type: \"number\",\n        restriction: (number) => number >= 0,\n        message: \"value must be positive\"\n    },\n    optionalMantissa: \"boolean\",\n    trimMantissa: \"boolean\",\n    roundingFunction: \"function\",\n    optionalCharacteristic: \"boolean\",\n    thousandSeparated: \"boolean\",\n    spaceSeparated: \"boolean\",\n    spaceSeparatedCurrency: \"boolean\",\n    spaceSeparatedAbbreviation: \"boolean\",\n    abbreviations: validAbbreviations,\n    negative: {\n        type: \"string\",\n        validValues: validNegativeValues\n    },\n    forceSign: \"boolean\",\n    exponential: {\n        type: \"boolean\"\n    },\n    prefixSymbol: {\n        type: \"boolean\",\n        restriction: (number, format) => format.output === \"percent\",\n        message: \"`prefixSymbol` can be provided only when the output is `percent`\"\n    }\n};\n\nconst validLanguage = {\n    languageTag: {\n        type: \"string\",\n        mandatory: true,\n        restriction: (tag) => {\n            return tag.match(bcp47RegExp);\n        },\n        message: \"the language tag must follow the BCP 47 specification (see https://tools.ieft.org/html/bcp47)\"\n    },\n    delimiters: {\n        type: \"object\",\n        children: {\n            thousands: \"string\",\n            decimal: \"string\",\n            thousandsSize: \"number\"\n        },\n        mandatory: true\n    },\n    abbreviations: validMandatoryAbbreviations,\n    spaceSeparated: \"boolean\",\n    spaceSeparatedCurrency: \"boolean\",\n    ordinal: {\n        type: \"function\",\n        mandatory: true\n    },\n    bytes: {\n        type: \"object\",\n        children: {\n            binarySuffixes: \"object\",\n            decimalSuffixes: \"object\"\n        }\n    },\n    currency: {\n        type: \"object\",\n        children: {\n            symbol: \"string\",\n            position: \"string\",\n            code: \"string\"\n        },\n        mandatory: true\n    },\n    defaults: \"format\",\n    ordinalFormat: \"format\",\n    byteFormat: \"format\",\n    percentageFormat: \"format\",\n    currencyFormat: \"format\",\n    timeDefaults: \"format\",\n    formats: {\n        type: \"object\",\n        children: {\n            fourDigits: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithTwoDecimals: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithTwoDecimalsNoCurrency: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithNoDecimals: {\n                type: \"format\",\n                mandatory: true\n            }\n        }\n    }\n};\n\n/**\n * Check the validity of the provided input and format.\n * The check is NOT lazy.\n *\n * @param {string|number|Numbro} input - input to check\n * @param {NumbroFormat} format - format to check\n * @return {boolean} True when everything is correct\n */\nfunction validate(input, format) {\n    let validInput = validateInput(input);\n    let isFormatValid = validateFormat(format);\n\n    return validInput && isFormatValid;\n}\n\n/**\n * Check the validity of the numbro input.\n *\n * @param {string|number|Numbro} input - input to check\n * @return {boolean} True when everything is correct\n */\nfunction validateInput(input) {\n    let value = unformatter.unformat(input);\n\n    return value !== undefined;\n}\n\n/**\n * Check the validity of the provided format TOVALIDATE against SPEC.\n *\n * @param {NumbroFormat} toValidate - format to check\n * @param {*} spec - specification against which to check\n * @param {string} prefix - prefix use for error messages\n * @param {boolean} skipMandatoryCheck - `true` when the check for mandatory key must be skipped\n * @return {boolean} True when everything is correct\n */\nfunction validateSpec(toValidate, spec, prefix, skipMandatoryCheck = false) {\n    let results = Object.keys(toValidate).map((key) => {\n        if (!spec[key]) {\n            console.error(`${prefix} Invalid key: ${key}`); // eslint-disable-line no-console\n            return false;\n        }\n\n        let value = toValidate[key];\n        let data = spec[key];\n\n        if (typeof data === \"string\") {\n            data = {type: data};\n        }\n\n        if (data.type === \"format\") { // all formats are partial (a.k.a will be merged with some default values) thus no need to check mandatory values\n            let valid = validateSpec(value, validFormat, `[Validate ${key}]`, true);\n\n            if (!valid) {\n                return false;\n            }\n        } else if (typeof value !== data.type) {\n            console.error(`${prefix} ${key} type mismatched: \"${data.type}\" expected, \"${typeof value}\" provided`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.restrictions && data.restrictions.length) {\n            let length = data.restrictions.length;\n            for (let i = 0; i < length; i++) {\n                let {restriction, message} = data.restrictions[i];\n                if (!restriction(value, toValidate)) {\n                    console.error(`${prefix} ${key} invalid value: ${message}`); // eslint-disable-line no-console\n                    return false;\n                }\n            }\n        }\n\n        if (data.restriction && !data.restriction(value, toValidate)) {\n            console.error(`${prefix} ${key} invalid value: ${data.message}`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.validValues && data.validValues.indexOf(value) === -1) {\n            console.error(`${prefix} ${key} invalid value: must be among ${JSON.stringify(data.validValues)}, \"${value}\" provided`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.children) {\n            let valid = validateSpec(value, data.children, `[Validate ${key}]`);\n\n            if (!valid) {\n                return false;\n            }\n        }\n\n        return true;\n    });\n\n    if (!skipMandatoryCheck) {\n        results.push(...Object.keys(spec).map((key) => {\n            let data = spec[key];\n            if (typeof data === \"string\") {\n                data = {type: data};\n            }\n\n            if (data.mandatory) {\n                let mandatory = data.mandatory;\n                if (typeof mandatory === \"function\") {\n                    mandatory = mandatory(toValidate);\n                }\n\n                if (mandatory && toValidate[key] === undefined) {\n                    console.error(`${prefix} Missing mandatory key \"${key}\"`); // eslint-disable-line no-console\n                    return false;\n                }\n            }\n\n            return true;\n        }));\n    }\n\n    return results.reduce((acc, current) => {\n        return acc && current;\n    }, true);\n}\n\n/**\n * Check the provided FORMAT.\n *\n * @param {NumbroFormat} format - format to check\n * @return {boolean}\n */\nfunction validateFormat(format) {\n    return validateSpec(format, validFormat, \"[Validate format]\");\n}\n\n/**\n * Check the provided LANGUAGE.\n *\n * @param {NumbroLanguage} language - language to check\n * @return {boolean}\n */\nfunction validateLanguage(language) {\n    return validateSpec(language, validLanguage, \"[Validate language]\");\n}\n\nmodule.exports = {\n    validate,\n    validateFormat,\n    validateInput,\n    validateLanguage\n};\n","/* @license\nPapa Parse\nv5.3.2\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;M(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!M(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=M(t.step),t.chunk=M(t.chunk),t.complete=M(t.complete),t.error=M(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&M(e.read)&&M(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(y=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s);(\"boolean\"==typeof t.escapeFormulae||t.escapeFormulae instanceof RegExp)&&(o=t.escapeFormulae instanceof RegExp?t.escapeFormulae:/^[=+\\-@\\t\\r].*$/)}();var h=new RegExp(j(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||r),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=v(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=v(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=y)}}return r}function v(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var i=!1;o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,i=!0);var r=e.toString().replace(h,a);return(i=i||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(r,b.BAD_DELIMITERS)||-1<r.indexOf(m)||\" \"===r.charAt(0)||\" \"===r.charAt(r.length-1))?s+r+s:r}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=E,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(M(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(M(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){M(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else M(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&M(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(M(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!M(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){M(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=v(this._chunkLoaded,this),r.onerror=v(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=v(this._chunkLoaded,this),r.onerror=v(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=v(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=v(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=v(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=v(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,u=/^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(M(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){return c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines&&(c.data=c.data.filter(function(e){return!y(e)})),_()&&function(){if(!c)return;function e(e,t){M(m.transformHeader)&&(e=m.transformHeader(e,t)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=v(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function v(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(j(t)+\"([^]*?)\"+j(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)M(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&y(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=w(m);return m.preview&&m.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=M(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,M(m.complete)&&m.complete(c),a=\"\"}}function j(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(e){var S,O=(e=e||{}).delimiter,x=e.newline,I=e.comments,T=e.step,D=e.preview,A=e.fastMode,L=S=void 0===e.quoteChar||null===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(L=e.escapeChar),(\"string\"!=typeof O||-1<b.BAD_DELIMITERS.indexOf(O))&&(O=\",\"),I===O)throw new Error(\"Comment character same as delimiter\");!0===I?I=\"#\":(\"string\"!=typeof I||-1<b.BAD_DELIMITERS.indexOf(I))&&(I=!1),\"\\n\"!==x&&\"\\r\"!==x&&\"\\r\\n\"!==x&&(x=\"\\n\");var F=0,z=!1;this.parse=function(r,t,i){if(\"string\"!=typeof r)throw new Error(\"Input must be a string\");var n=r.length,e=O.length,s=x.length,a=I.length,o=M(T),h=[],u=[],f=[],d=F=0;if(!r)return C();if(A||!1!==A&&-1===r.indexOf(S)){for(var l=r.split(x),c=0;c<l.length;c++){if(f=l[c],F+=f.length,c!==l.length-1)F+=x.length;else if(i)return C();if(!I||f.substring(0,a)!==I){if(o){if(h=[],k(f.split(O)),R(),z)return C()}else k(f.split(O));if(D&&D<=c)return h=h.slice(0,D),C(!0)}}return C()}for(var p=r.indexOf(O,F),g=r.indexOf(x,F),_=new RegExp(j(L)+j(S),\"g\"),m=r.indexOf(S,F);;)if(r[F]!==S)if(I&&0===f.length&&r.substring(F,F+a)===I){if(-1===g)return C();F=g+s,g=r.indexOf(x,F),p=r.indexOf(O,F)}else if(-1!==p&&(p<g||-1===g))f.push(r.substring(F,p)),F=p+e,p=r.indexOf(O,F);else{if(-1===g)break;if(f.push(r.substring(F,g)),w(g+s),o&&(R(),z))return C();if(D&&h.length>=D)return C(!0)}else for(m=F,F++;;){if(-1===(m=r.indexOf(S,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:F}),E();if(m===n-1)return E(r.substring(F,m).replace(_,S));if(S!==L||r[m+1]!==L){if(S===L||0===m||r[m-1]!==L){-1!==p&&p<m+1&&(p=r.indexOf(O,m+1)),-1!==g&&g<m+1&&(g=r.indexOf(x,m+1));var y=b(-1===g?p:Math.min(p,g));if(r.substr(m+1+y,e)===O){f.push(r.substring(F,m).replace(_,S)),r[F=m+1+y+e]!==S&&(m=r.indexOf(S,F)),p=r.indexOf(O,F),g=r.indexOf(x,F);break}var v=b(g);if(r.substring(m+1+v,m+1+v+s)===x){if(f.push(r.substring(F,m).replace(_,S)),w(m+1+v+s),p=r.indexOf(O,F),m=r.indexOf(S,F),o&&(R(),z))return C();if(D&&h.length>=D)return C(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:F}),m++}}else m++}return E();function k(e){h.push(e),d=F}function b(e){var t=0;if(-1!==e){var i=r.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=r.substring(F)),f.push(e),F=n,k(f),o&&R()),C()}function w(e){F=e,k(f),f=[],g=r.indexOf(x,F)}function C(e){return{data:h,errors:u,meta:{delimiter:O,linebreak:x,aborted:z,truncated:!!e,cursor:d+(t||0)}}}function R(){T(C()),h=[],u=[]}},this.abort=function(){z=!0},this.getCharIndex=function(){return F}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:y,resume:y};if(M(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else M(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];M(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function y(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=w(e[i]);return t}function v(e,t){return function(){e.apply(t,arguments)}}function M(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_propTypes2","_event","_scrollParent2","_debounce2","_throttle2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","defaultBoundingClientRect","LISTEN_FLAG","listeners","pending","passiveEventSupported","opts","get","window","addEventListener","e","passiveEvent","capture","passive","checkVisible","component","node","ref","HTMLElement","parent","visible","overflow","ownerDocument","document","documentElement","parentTop","parentLeft","parentHeight","parentWidth","_parent$getBoundingCl","getBoundingClientRect","top","left","height","width","windowInnerHeight","innerHeight","clientHeight","windowInnerWidth","innerWidth","clientWidth","intersectionTop","Math","max","intersectionLeft","intersectionHeight","min","intersectionWidth","_node$getBoundingClie","offsetTop","offsetLeft","offsets","Array","isArray","offset","checkOverflowVisible","offsetWidth","offsetHeight","getClientRects","elementHeight","_node$getBoundingClie2","checkNormalVisible","once","push","forceUpdate","unmountIfInvisible","purgePending","forEach","index","indexOf","splice","lazyLoadHandler","listener","delayType","finalLazyLoadHandler","LazyLoad","_Component","this","_this","getPrototypeOf","setRef","bind","scrollport","scrollContainer","querySelector","needResetFinalLazyLoadHandler","undefined","debounce","off","throttle","getAttribute","listenerCount","setAttribute","_props","scroll","resize","on","removeEventListener","removeAttribute","element","_props2","children","placeholder","className","classNamePrefix","style","createElement","Component","propTypes","string","bool","oneOfType","number","arrayOf","object","defaultProps","getDisplayName","WrappedComponent","displayName","name","exports","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","setTimeout","apply","arguments","callNow","el","eventName","callback","attachEvent","event","detachEvent","excludeStaticParent","position","overflowRegex","parentNode","getComputedStyle","overflowX","overflowY","test","fn","threshhold","scope","deferTimer","now","clearTimeout","r","1","isNumeric","hasSymbol","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","j","s","z","xc","yc","k","l","a","b","n","String","str","len","BigNumber","pow2_53","random53bitInt","decimal","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","toString","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","x","v","intCheck","round","isNum","alphabet","caseChanged","arrL","arr","carry","klo","khi","temp","xlo","m","xhi","cmp","c0","ne","toExponential","toFixedPoint","method","c","pows10","out","rd","ni","d","rm","sd","crypto","getRandomValues","Error","EXPONENTIAL_AT","RANGE","rand","dp","sum","convertBase","y","baseOut","div","yL","yz","qc","q","base","more","xL","xi","remL","rem","yc0","rem0","prodL","prod","subtract","parseNumeric","nIsBig","nIsNeg","isModExp","nIsOdd","half","isOdd","ye","xe","t","xLTy","reverse","normalise","sqrtBase","xcL","ycL","zc","ylo","yhi","slice","coeffToString","rep","format","toFixed","g1","g2","intPart","fractionPart","isNeg","intDigits","isInteger","n1","d1","md","exp","n0","d2","d0","module","globalObject","languageTag","delimiters","thousands","abbreviations","thousand","million","billion","trillion","spaceSeparated","ordinal","bytes","binarySuffixes","decimalSuffixes","currency","symbol","code","currencyFormat","thousandSeparated","totalLength","spaceSeparatedCurrency","formats","fourDigits","fullWithTwoDecimals","output","mantissa","fullWithTwoDecimalsNoCurrency","fullWithNoDecimals","globalState","validating","parsing","powers","pow","defaultOptions","characteristic","forceAverage","average","optionalMantissa","negative","forceSign","roundingFunction","spaceSeparatedAbbreviation","currentBytes","general","scale","suffixes","marker","binary","_format","providedFormat","numbro","parseFormat","validateFormat","postfix","state","currentCurrency","clonedFormat","assign","options","space","currencyPosition","currencySymbol","lowPrecision","formatNumber","_value","formatOrDefault","currentCurrencyDefaultFormat","prefixSymbol","currentPercentageDefaultFormat","_state$currentBytes","localBinarySuffixes","localDecimalSuffixes","baseInfo","_getFormatByteUnits","getFormatByteUnits","defaults","currentByteDefaultFormat","currentTimeDefaultFormat","hours","floor","minutes","seconds","ordinalFn","currentOrdinal","currentOrdinalDefaultFormat","abs","power","zeroes","precision","_result$split2","split","_slicedToArray","_base$split2","_base$split2$","substr","replaceDelimiters","currentDelimiters","thousandSeparator","thousandsSize","hasNegativeSign","counter","unshift","_ref3","_ref3$state","_ref3$defaults","currentDefaults","hasZeroFormat","getZeroFormat","isFinite","_ref2","_ref2$characteristicP","characteristicPrecision","_value$toExponential$2","numberString","exponential","optionalCharacteristic","mantissaPrecision","trimMantissa","abbreviation","data","_ref","_ref$lowPrecision","_ref$spaceSeparated","_ref$totalLength","_ref$roundingFunction","isNegative","characteristicLength","currentAbbreviations","_data","trim","_result$toString$spli2","currentCharacteristic","_result$toString$spli3","currentMantissa","match","hasTrailingZeroes","_result$toString$spli5","replace","missingZeros","defaultFormat","keys","_key","concat","getByteUnit","_key2","getBinaryByteUnit","_key3","getDecimalByteUnit","_key4","enUS","currentLanguageTag","languages","zeroFormat","globalDefaults","chooseLanguage","tag","currentLanguageData","currentLanguage","ordinalFormat","byteFormat","percentageFormat","timeFormat","setDefaults","setZeroFormat","languageData","registerLanguage","useLanguage","validateLanguage","setLanguage","fallbackTag","matchingLanguageTag","find","each","loadLanguagesInNode","tags","console","error","_subtract","other","otherValue","isNumbro","minus","toNumber","add","plus","multiply","times","divide","dividedBy","set","difference","clone","validator","loader","unformatter","formatter","manipulate","Numbro","input","normalizeInput","unformat","isNaN","NaN","version","language","defaultCurrencyFormat","validate","allSuffixes","factor","escapeRegExp","unformatValue","inputString","o","computeUnformattedValue","u","stripped","newInput","RegExp","possibleOrdinalValue","parseFloat","ordinalString","inversedAbbreviations","abbreviationValues","sort","numberOfAbbreviations","_i","segments","bcp47RegExp","validFormat","type","validValues","restriction","message","mandatory","restrictions","validLanguage","timeDefaults","validateInput","validateSpec","toValidate","spec","skipMandatoryCheck","results","map","_typeof","_data$restrictions$i","JSON","stringify","_toConsumableArray","reduce","acc","current","validInput","isFormatValid","define","f","postMessage","location","protocol","h","parse","dynamicTyping","M","dynamicTypingFunction","transform","worker","WORKERS_SUPPORTED","URL","webkitURL","BLOB_URL","createObjectURL","Blob","Worker","onmessage","_","id","userStep","step","userChunk","chunk","userComplete","complete","userError","config","workerId","NODE_STREAM_INPUT","download","p","readable","read","g","File","stream","unparse","delimiter","BAD_DELIMITERS","filter","quotes","skipEmptyLines","newline","quoteChar","header","columns","escapeChar","escapeFormulae","fields","meta","join","charAt","RECORD_SEP","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","E","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","prop","toUpperCase","attr","toLowerCase","FileReader","files","file","inputElem","instanceConfig","extend","before","action","reason","_handle","_finished","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","w","chunkSize","parseInt","streamer","_config","parseChunk","beforeFirstChunk","paused","aborted","cursor","substring","preview","WORKER_ID","finished","_sendError","_readChunk","_chunkLoaded","XMLHttpRequest","withCredentials","onload","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","setRequestHeader","send","status","readyState","responseText","getResponseHeader","lastIndexOf","statusText","webkitSlice","mozSlice","FileReaderSync","size","readAsText","encoding","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","shift","_streamCleanUp","removeListener","abort","transformHeader","row","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","S","O","I","T","D","A","fastMode","L","F","C","R","linebreak","truncated","terminate","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","any","elementType","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}