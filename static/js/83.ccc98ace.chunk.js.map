{"version":3,"file":"static/js/83.ccc98ace.chunk.js","mappings":"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","sources":["os/components/privateRoute.tsx","shared/ionicon.tsx","shared/storage.ts","shared/runtime.ts","os/configs/sol.config.ts","os/configs/register.config.ts","os/configs/index.ts","os/store/wallet.reducer.ts","shared/session.ts","os/view/header/wallet/lib/baseWallet.ts","os/view/header/wallet/lib/secretkeyWallet.ts","os/view/header/wallet/lib/keystoreWallet.ts","os/view/header/wallet/lib/coin98Wallet.ts","os/view/header/wallet/lib/phantomWallet.ts","os/view/header/wallet/lib/solletWallet.ts","os/view/header/wallet/lib/slopeWallet.ts","os/view/header/wallet/login/coin98/index.tsx","os/view/header/wallet/login/phantom/index.tsx","os/view/header/wallet/login/sollet/index.tsx","os/view/header/wallet/login/keystore/newKeystore.tsx","os/view/header/wallet/login/keystore/index.tsx","os/view/header/wallet/login/secretKey/index.tsx","os/static/images/slope.svg","os/view/header/wallet/login/slope/index.tsx","os/view/header/wallet/login/index.tsx","os/view/header/wallet/index.tsx","os/components/brand.tsx","shared/util.ts","os/view/header/actionCenter/applications/walletIntro.tsx","os/components/errorBoundary.tsx","os/components/appLoader.tsx","os/components/appIcon.tsx","os/view/header/actionCenter/applications/widgetLayout/droppablePage.tsx","os/view/header/actionCenter/applications/widgetLayout/draggableIcon.tsx","os/view/header/actionCenter/applications/widgetLayout/draggableAction.tsx","os/store/ui.reducer.ts","shared/pdb/ipfs.ts","os/view/header/actionCenter/settings/network/index.tsx","os/view/market/index.tsx","shared/pdb/index.ts","os/store/page.reducer.ts","os/view/header/actionCenter/applications/widgetLayout/index.tsx","os/view/header/actionCenter/applications/index.tsx","os/view/header/actionCenter/settings/theme.tsx","os/view/header/actionCenter/settings/network/netSwitch.tsx","os/view/header/actionCenter/settings/sync/index.tsx","os/view/header/actionCenter/settings/index.tsx","os/view/header/actionCenter/index.tsx","os/view/header/contextMenu/more.tsx","os/view/header/contextMenu/navigation.tsx","os/store/search.reducer.ts","os/view/header/contextMenu/search.tsx","os/view/header/contextMenu/index.tsx","os/view/header/index.tsx","os/view/welcome/index.tsx","os/view/dashboard/index.tsx","os/view/page/notFound.tsx","os/view/page/index.tsx","os/view/market/searchEngine.ts","os/components/appReadme.tsx","os/static/images/error-image.svg","os/components/appPanel.tsx","os/view/market/appViewer/heroPanel.tsx","os/view/market/appViewer/index.tsx","os/view/watcher/ui.watcher.tsx","os/view/watcher/wallet.watcher.ts","os/store/accounts.reducer.ts","os/view/watcher/account.watcher.tsx","os/store/pools.reducer.ts","os/view/watcher/pool.watcher.tsx","os/view/watcher/index.tsx","os/view/index.tsx","shared/devTools.ts","os/store/flags.reducer.ts","os/store/mints.reducer.ts","os/store/index.ts","reportWebVitals.ts","bootstrap.tsx"],"sourcesContent":["import { ComponentProps, ElementType, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { RootState } from 'os/store'\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}: {\n  component: ElementType\n} & ComponentProps<typeof Route>) => {\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  const render = useCallback(\n    (props) => {\n      const pathname = encodeURI(\n        window.location.href.replace(window.location.origin, ''),\n      )\n      if (!account.isAddress(walletAddress))\n        return <Redirect to={'/welcome?redirect=' + pathname} />\n      return <Component {...props} />\n    },\n    [walletAddress, Component],\n  )\n\n  return <Route {...rest} render={render} />\n}\n\nexport default PrivateRoute\n","import { forwardRef } from 'react'\n\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n  return (\n    <span className={cln} {...props}>\n      <ion-icon ref={ref} name={name} />\n    </span>\n  )\n})\n\nexport default IonIcon\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n","import { Net } from 'shared/runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  chainId: 101 | 102 | 103\n  senAddress: string\n  swapAddress: string\n  taxmanAddress: string\n  bulksenderAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: 'https://api.devnet.solana.com',\n    chainId: 103,\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n    bulksenderAddress: 'FjkVzT6QJCQrgoZ8VoyAqysD5Mfa73ekpXWe9zDprWRA',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: 'https://api.testnet.solana.com',\n    chainId: 102,\n    senAddress: '',\n    swapAddress: '',\n    taxmanAddress: '',\n    bulksenderAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: 'https://api.mainnet-beta.solana.com',\n    chainId: 101,\n    senAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n    bulksenderAddress: '',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  extra: SenHubRegister\n  senreg: string\n}\n\nconst devApp = {\n  [process.env.REACT_APP_ID]: {\n    url: `${process.env.REACT_APP_URL}/index.js`,\n    appId: process.env.REACT_APP_ID,\n    name: 'My App',\n    author: {\n      name: 'Sentre',\n      email: 'hi@sentre.io',\n    },\n    description: 'A sample project for Sentre developers',\n    verified: false,\n  },\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    extra: {},\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { net, env } from 'shared/runtime'\nimport sol from './sol.config'\nimport register from './register.config'\n\nconst configs = {\n  sol: sol[net],\n  register: register[env],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Lamports, SPLT, Swap } from '@senswap/sen-js'\n\nimport configs from 'os/configs'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  visible: boolean\n  address: string\n  lamports: bigint\n}\n\nconst initializeWindowSenOs = async (wallet: any) => {\n  const {\n    sol: { node, spltAddress, splataAddress, swapAddress },\n  } = configs\n  window.sentre = {\n    wallet: wallet,\n    lamports: new Lamports(node),\n    splt: new SPLT(spltAddress, splataAddress, node),\n    swap: new Swap(swapAddress, spltAddress, splataAddress, node),\n  }\n}\n\nconst destroyWindowSenOs = async () => {\n  if (window.sentre?.wallet) window.sentre.wallet.disconnect()\n  await initializeWindowSenOs(null)\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'wallet'\nconst initialState: State = {\n  visible: false,\n  address: '',\n  lamports: BigInt(0),\n}\n\n/**\n * Actions\n */\n\nexport const openWallet = createAsyncThunk(`${NAME}/openWallet`, async () => {\n  return { visible: true }\n})\n\nexport const closeWallet = createAsyncThunk(`${NAME}/closeWallet`, async () => {\n  return { visible: false }\n})\n\nexport const connectWallet = createAsyncThunk(\n  `${NAME}/connectWallet`,\n  async (wallet: any) => {\n    if (!wallet) throw new Error('Invalid wallet instance')\n    await initializeWindowSenOs(wallet)\n    const address = await wallet.getAddress()\n    const lamports = await window.sentre.lamports.getLamports(address)\n    return { address, lamports: BigInt(lamports), visible: false }\n  },\n)\n\nexport const updateWallet = createAsyncThunk(\n  `${NAME}/updateWallet`,\n  async ({ lamports }: Partial<State>) => {\n    return { lamports }\n  },\n)\n\nexport const disconnectWallet = createAsyncThunk(\n  `${NAME}/disconnectWallet`,\n  async () => {\n    await destroyWindowSenOs()\n    window.location.reload() // Reset all redux store\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        openWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        closeWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        connectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        disconnectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","const KEY = 'sentre'\nconst driver = window.sessionStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return false\n  }\n}\n\nconst session = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n\n  clear: (key: string) => {\n    session.set(key, null)\n  },\n}\n\nexport default session\n","import { Transaction } from '@solana/web3.js'\nimport {\n  WalletInterface,\n  Provider,\n  Signature,\n  SignedMessage,\n} from '@senswap/sen-js'\n\nimport session from 'shared/session'\n\nclass BaseWallet implements WalletInterface {\n  readonly walletType: string\n\n  constructor(walletType: string) {\n    this.walletType = walletType\n    session.set('WalletType', this.walletType)\n  }\n\n  getProvider = async (): Promise<Provider> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  getAddress = async (): Promise<string> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signTransaction = async (transaction: Transaction): Promise<Transaction> => {\n    const { signature, publicKey } = await this.rawSignTransaction(transaction)\n    transaction.addSignature(publicKey, signature)\n    return transaction\n  }\n\n  rawSignTransaction = async (transaction: Transaction): Promise<Signature> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signMessage = async (message: string): Promise<SignedMessage> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ): Promise<boolean> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  disconnect = async (): Promise<void> => {\n    session.clear('WalletType')\n    const provider = await this.getProvider()\n    provider.disconnect()\n  }\n}\n\nexport default BaseWallet\n","import { Transaction, Keypair } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Provider, Signature } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\nimport session from 'shared/session'\n\ntype ExpanedProvider = Provider & { keypair: Keypair }\n\nclass SecretKeyWallet extends BaseWallet {\n  constructor(secretKey: string) {\n    super('SecretKey')\n\n    this._setSecretKey(secretKey)\n  }\n\n  private _setSecretKey = (secretKey: string): void => {\n    if (!secretKey) throw new Error('Invalid secret key')\n    session.set('SecretKey', secretKey)\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const secretKey = session.get('SecretKey')\n    const keypair = account.fromSecretKey(secretKey)\n    if (!keypair) throw new Error('Cannot get the keystore-based provider')\n    const provider = {\n      keypair,\n      disconnect: () => session.clear('SecretKey'),\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { keypair } = await this.getProvider()\n    return keypair.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const confirmed = window.confirm('Please confirm to sign the traction!')\n    if (!confirmed) throw new Error('User rejects to sign the transaction')\n    const { keypair } = await this.getProvider()\n    const signData = transaction.serializeMessage()\n    const publicKey = keypair.publicKey\n    const signature = nacl.sign.detached(signData, keypair.secretKey)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const confirmed = window.confirm(\n      `Please confirm to sign the message! Message: ${message}`,\n    )\n    if (!confirmed) throw new Error('User rejects to sign the message')\n    const { keypair } = await this.getProvider()\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    const data = account.signMessage(message, secretKey)\n    return { ...data }\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default SecretKeyWallet\n","import { Transaction, Keypair } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Keystore, Provider, Signature } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\nimport session from 'shared/session'\n\ntype ExpanedProvider = Provider & { keypair: Keypair }\n\nclass KeystoreWallet extends BaseWallet {\n  constructor(keystore: Keystore, password: string) {\n    super('SecretKey')\n\n    this._setSecretKey(keystore, password)\n  }\n\n  private _setSecretKey = (keystore: Keystore, password: string): void => {\n    const keypair = account.fromKeystore(keystore, password)\n    if (!keypair) throw new Error('Invalid ketstore or password')\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    session.set('SecretKey', secretKey)\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const secretKey = session.get('SecretKey')\n    const keypair = account.fromSecretKey(secretKey)\n    if (!keypair) throw new Error('Cannot get the keystore-based provider')\n    const provider = {\n      keypair,\n      disconnect: () => session.clear('SecretKey'),\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { keypair } = await this.getProvider()\n    return keypair.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const confirmed = window.confirm('Please confirm to sign the traction!')\n    if (!confirmed) throw new Error('User rejects to sign the transaction')\n    const { keypair } = await this.getProvider()\n    const signData = transaction.serializeMessage()\n    const publicKey = keypair.publicKey\n    const signature = nacl.sign.detached(signData, keypair.secretKey)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const confirmed = window.confirm(\n      `Please confirm to sign the message! Message: ${message}`,\n    )\n    if (!confirmed) throw new Error('User rejects to sign the message')\n    const { keypair } = await this.getProvider()\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    const data = account.signMessage(message, secretKey)\n    return { ...data }\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default KeystoreWallet\n","import { Transaction } from '@solana/web3.js'\nimport { account, Signature, SignedMessage } from '@senswap/sen-js'\nimport { decode } from 'bs58'\n\nimport BaseWallet from './baseWallet'\n\n\nclass Coin98Wallet extends BaseWallet {\n  constructor() {\n    super('Coin98')\n  }\n\n  getProvider = async () => {\n    const { sol } = window?.coin98 || {}\n    if (!sol) throw new Error('Wallet is not connected')\n    return sol\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const [address] = (await provider.request({ method: 'sol_accounts' })) || []\n    if (!account.isAddress(address))\n      throw new Error('There is no Solana account')\n    return address\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature: sig } = await provider.request({\n      method: 'sol_sign',\n      params: [transaction],\n    })\n    const signature = decode(sig)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const data = await provider.request({\n      method: 'sol_sign',\n      params: [message],\n    })\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = await account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default Coin98Wallet\n","import { Transaction } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Signature, SignedMessage } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\n\nclass PhantomWallet extends BaseWallet {\n  constructor() {\n    super('Phantom')\n  }\n\n  getProvider = async () => {\n    const { solana } = window\n    if (!solana?.isPhantom) throw new Error('Wallet is not connected')\n    if (solana.isConnected) return solana\n    solana.connect()\n    return await new Promise((resolve) =>\n      solana.on('connect', () => resolve(solana)),\n    )\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const address = provider.publicKey.toString()\n    if (!account.isAddress(address))\n      throw new Error('There is no Solana account')\n    return address\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature } = await provider.signTransaction(transaction)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const encodedMsg = new TextEncoder().encode(message)\n    const { signature: sig } = await provider.signMessage(encodedMsg, 'utf8')\n    const signature = Buffer.from(sig).toString('hex')\n    const data = { address, signature, message }\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const publicKey = account.fromAddress(address)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default PhantomWallet\n","import { Transaction } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Provider, Signature, SignedMessage } from '@senswap/sen-js'\nimport WalletAdapter from '@project-serum/sol-wallet-adapter'\n\nimport BaseWallet from './baseWallet'\nimport configs from 'os/configs'\n\nconst PROVIDER_URL = 'https://www.sollet.io'\n\nclass SolletWallet extends BaseWallet {\n  private provider: WalletAdapter & Provider\n\n  constructor() {\n    super('Sollet')\n\n    const {\n      sol: { node },\n    } = configs\n    this.provider = new WalletAdapter(PROVIDER_URL, node)\n  }\n\n  getProvider = async () => {\n    if (!this.provider.connected) await this.provider.connect()\n    return this.provider\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    if (!provider.publicKey) throw new Error('Cannot connect to Sollet')\n    return provider.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature } = await provider.signTransaction(transaction)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const encodedMsg = new TextEncoder().encode(message)\n    const { signature: sig } = await provider.sign(encodedMsg, 'utf8')\n    const signature = Buffer.from(sig).toString('hex')\n    const data = { address, signature, message }\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const publicKey = account.fromAddress(address)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default SolletWallet\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Signature } from '@senswap/sen-js'\nimport { decode, encode } from 'bs58'\n\nimport BaseWallet from './baseWallet'\n\nclass SlopeWallet extends BaseWallet {\n  private provider: any\n  constructor() {\n    super('Slope')\n    this.provider = null\n  }\n\n  getProvider = async () => {\n    const { Slope } = window || {}\n    if (!Slope) throw new Error('Cannot connect to Slope')\n    if (this.provider) return this.provider\n    this.provider = new Slope()\n    await this.provider.connect()\n    return this.provider\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const { data } = await provider.connect()\n    if (!data.publicKey) throw new Error('Wallet is not connected')\n    return data.publicKey\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const message = encode(transaction.serializeMessage())\n    const { msg, data } = await provider.signTransaction(message)\n\n    if (!data.publicKey) throw new Error(msg)\n    const publicKey = new PublicKey(data.publicKey)\n    const signature = decode(data.signature)\n\n    return { publicKey, signature } as Signature\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    const slopeAddress = address || (await this.getAddress())\n    const publicKey = account.fromAddress(slopeAddress)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default SlopeWallet\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport COIN98 from 'os/static/images/coin98.png'\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { Coin98Wallet } from '../../lib'\n\nconst Coin98 = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { coin98 } = window\n    if (!coin98)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Coin98 Wallet is not installed. If this is the first time you install Coin98 wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new Coin98Wallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={COIN98} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Coin98</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Coin98\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport PHANTOM from 'os/static/images/phantom.png'\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { PhantomWallet } from '../../lib'\n\nconst Phantom = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { solana } = window\n    if (!solana?.isPhantom)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Phantom Wallet is not installed. If this is the first time you install Phantom wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new PhantomWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={PHANTOM} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Phantom</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Phantom\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport SOLLET from 'os/static/images/sollet.png'\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { SolletWallet } from '../../lib'\n\nconst Sollet = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const wallet = new SolletWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={SOLLET} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Sollet</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Sollet\n","import { ChangeEvent, useState, useEffect } from 'react'\nimport fileDownload from 'js-file-download'\nimport { keystore as ks, Keystore } from '@senswap/sen-js'\n\nimport { Row, Col, Button, Typography, Input, Modal } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nconst NewKeyStore = ({\n  visible = false,\n  onClose = () => {},\n}: {\n  visible: boolean\n  onClose: () => void\n}) => {\n  const [password, setPassword] = useState('')\n  const [keystore, setKeystore] = useState<Keystore | null>(null)\n\n  useEffect(() => {\n    setPassword('')\n    setKeystore(null)\n  }, [visible])\n  useEffect(() => {\n    setKeystore(ks.gen(password))\n  }, [password])\n\n  const onDownload = () => {\n    if (!keystore)\n      return window.notify({\n        type: 'error',\n        description: 'Cannot download a empty keystore',\n      })\n    fileDownload(\n      JSON.stringify(keystore),\n      `senwallet-keystore-${keystore.publicKey}.json`,\n    )\n    return onClose()\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={onClose}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title>New Keystore</Typography.Title>\n          <Typography.Text>\n            The password is used to encrypt your keystore. You will need this\n            password to unlock your keystore later.\n          </Typography.Text>\n        </Col>\n        <Col span={24}>\n          <Input.Password\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setPassword(e.target.value || '')\n            }\n            iconRender={(visible) =>\n              visible ? <IonIcon name=\"eye-off\" /> : <IonIcon name=\"eye\" />\n            }\n          />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]} justify=\"end\">\n            <Col>\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"cloud-download\" />}\n                onClick={onDownload}\n                disabled={!keystore || !keystore.publicKey}\n              >\n                Download\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default NewKeyStore\n","import { ChangeEvent, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { Row, Col, Space, Button, Typography, Input } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport NewKeyStore from './newKeystore'\n\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { KeystoreWallet } from '../../lib'\n\nconst KeyStore = () => {\n  const [password, setPassword] = useState('')\n  const [filename, setFilename] = useState('')\n  const [keystore, setKeystore] = useState(null)\n  const [visible, setVisible] = useState(false)\n\n  const refFile = useRef<HTMLInputElement>(null)\n  const dispatch = useDispatch<RootDispatch>()\n\n  const onKeystore = (e: ChangeEvent<HTMLInputElement>) => {\n    const [file]: any = e?.target?.files\n    if (file) {\n      const reader = new FileReader()\n      reader.readAsText(file)\n      reader.onloadend = () => {\n        setFilename(file.name)\n        setKeystore(JSON.parse(reader.result as string) || {})\n      }\n    }\n  }\n\n  const connect = async () => {\n    if (!keystore)\n      return window.notify({\n        type: 'warning',\n        description: 'Please upload your keystore',\n      })\n    if (!password)\n      return window.notify({\n        type: 'warning',\n        description: 'Please enter your password to unlock your wallet',\n      })\n    try {\n      const wallet = new KeystoreWallet(keystore as any, password)\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"document-lock\" />\n          <Typography.Text>\n            {`Keystore ( `}\n            <Typography.Link\n              href=\"https://solflare.com\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              SolFlare\n            </Typography.Link>{' '}\n            {`compatible )`}\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col xs={{ span: 24 }} md={{ span: 12 }}>\n        <Input\n          placeholder=\"Filename\"\n          value={filename}\n          suffix={\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"cloud-upload\" />}\n              style={{ marginRight: -8 }}\n              onClick={() => refFile.current?.click()}\n            >\n              Upload\n            </Button>\n          }\n          readOnly\n        />\n        <input\n          ref={refFile}\n          type=\"file\"\n          accept=\"application/json\"\n          onChange={onKeystore}\n          style={{ display: 'none' }}\n        />\n      </Col>\n      <Col xs={{ span: 24 }} md={{ span: 12 }}>\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          value={password}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setPassword(e.target.value || '')\n          }\n          suffix={\n            <Button\n              type=\"primary\"\n              onClick={connect}\n              icon={<IonIcon name=\"lock-open\" />}\n              style={{ marginRight: -8 }}\n            />\n          }\n        />\n      </Col>\n      <Col span={24} style={{ marginTop: -8 }}>\n        <Typography.Link onClick={() => setVisible(true)}>\n          <Space>\n            <IonIcon name=\"add-circle-outline\" />\n            <span>Create a keystore</span>\n          </Space>\n        </Typography.Link>\n      </Col>\n      <NewKeyStore visible={visible} onClose={() => setVisible(false)} />\n    </Row>\n  )\n}\n\nexport default KeyStore\n","import { ChangeEvent, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Typography, Input, Button, Space } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { SecretKeyWallet } from '../../lib'\n\nconst SecretKey = () => {\n  const [secretKey, setSecretKey] = useState('')\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    if (!secretKey)\n      return window.notify({\n        type: 'warning',\n        description: 'Please enter your secret key',\n      })\n    const wallet = new SecretKeyWallet(secretKey)\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  const onGen = () => {\n    const acc = account.createAccount()\n    const secretKey = Buffer.from(acc.secretKey).toString('hex')\n    return setSecretKey(secretKey)\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"key\" />\n          <Typography.Text>Secret Key</Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Input\n          placeholder=\"Secret Key\"\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setSecretKey(e.target.value || '')\n          }\n          value={secretKey}\n          suffix={\n            <Button\n              type=\"primary\"\n              onClick={connect}\n              icon={<IonIcon name=\"lock-open\" />}\n              style={{ marginRight: -8 }}\n            />\n          }\n        />\n      </Col>\n      <Col span={24} style={{ marginTop: -8 }}>\n        <Typography.Link onClick={onGen}>\n          <Space>\n            <IonIcon name=\"add-circle-outline\" />\n            <span>Create a secret key</span>\n          </Space>\n        </Typography.Link>\n      </Col>\n    </Row>\n  )\n}\n\nexport default SecretKey\n","var _path, _path2, _path3, _path4, _path5, _path6;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSlope(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 100,\n    height: 100,\n    viewBox: \"0 0 100 100\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.1234 42.1235H26.3713V57.8756H42.1234V42.1235Z\",\n    fill: \"#8179F2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8744 42.1237L42.1223 57.8758V42.1237L57.8744 26.3717V42.1237Z\",\n    fill: \"#7269F0\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8744 57.8756L42.1223 73.6277V57.8756L57.8744 42.1235V57.8756Z\",\n    fill: \"#B6B1FF\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.6287 42.1235H57.8766V57.8756H73.6287V42.1235Z\",\n    fill: \"#8179F2\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.1234 26.372L57.8755 10.6199V26.372L42.1234 42.1241H26.3713L42.1234 26.372Z\",\n    fill: \"#B6B1FF\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8729 73.6281L42.1208 89.3802V73.6281L57.8729 57.876H73.625L57.8729 73.6281Z\",\n    fill: \"#7269F0\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSlope);\nexport default __webpack_public_path__ + \"static/media/slope.de08dadb3988dd770e2d0d58acf15a09.svg\";\nexport { ForwardRef as ReactComponent };","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport SLOPE from 'os/static/images/slope.svg'\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { SlopeWallet } from '../../lib'\n\nconst Slope = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { Slope } = window\n    if (!Slope)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Slope Wallet is not installed. If this is the first time you install Slope wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new SlopeWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={SLOPE} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Slope</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Slope\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Modal, Tooltip, Switch, Divider, Typography } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Coin98 from './coin98'\nimport Phantom from './phantom'\nimport Sollet from './sollet'\nimport Keystore from './keystore'\nimport SecretKey from './secretKey'\nimport Slope from './slope'\n\nimport { RootState, RootDispatch } from 'os/store'\nimport { closeWallet } from 'os/store/wallet.reducer'\n\nconst Login = () => {\n  const [advance, setAdvance] = useState(false)\n  const { visible } = useSelector((state: RootState) => state.wallet)\n  const dispatch = useDispatch<RootDispatch>()\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={() => dispatch(closeWallet())}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Wallet Connection</Typography.Title>\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Coin98 />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Phantom />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Sollet />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Slope />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]} align=\"middle\">\n            <Col flex=\"auto\">\n              <Divider plain orientation=\"left\">\n                Other methods\n              </Divider>\n            </Col>\n            <Col>\n              <Tooltip title=\"Caution! These methods is not recommended due to lack of cryptographical protection. By switching the button, you agree that you will use this function at your own risk.\">\n                <Switch\n                  size=\"small\"\n                  checked={advance}\n                  onChange={setAdvance}\n                  checkedChildren={<IonIcon name=\"warning\" />}\n                  unCheckedChildren={<IonIcon name=\"help-circle\" />}\n                />\n              </Tooltip>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          {advance ? (\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <Keystore />\n              </Col>\n              <Col span={24} style={{ height: 16 }} /> {/* Safe space */}\n              <Col span={24}>\n                <SecretKey />\n              </Col>\n            </Row>\n          ) : null}\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default Login\n","import { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Button } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Login from './login'\n\nimport session from 'shared/session'\nimport { RootDispatch, RootState } from 'os/store'\nimport {\n  connectWallet,\n  openWallet,\n  disconnectWallet,\n} from 'os/store/wallet.reducer'\nimport {\n  Coin98Wallet,\n  PhantomWallet,\n  SecretKeyWallet,\n  SolletWallet,\n  SlopeWallet,\n} from './lib'\n\nconst Wallet = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n\n  const reconnect = () => {\n    const walletType = session.get('WalletType')\n    if (walletType === 'SecretKey')\n      return new SecretKeyWallet(session.get('SecretKey'))\n    if (walletType === 'Keystore')\n      return new SecretKeyWallet(session.get('SecretKey'))\n    if (walletType === 'Coin98') return new Coin98Wallet()\n    if (walletType === 'Phantom') return new PhantomWallet()\n    if (walletType === 'Sollet') return new SolletWallet()\n    if (walletType === 'Slope') return new SlopeWallet()\n    return null\n  }\n\n  useEffect(() => {\n    const wallet = reconnect()\n    try {\n      if (wallet) dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }, [dispatch])\n\n  if (!account.isAddress(address))\n    return (\n      <Fragment>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"wallet-outline\" />}\n          onClick={() => dispatch(openWallet())}\n        >\n          Connect Wallet\n        </Button>\n        <Login />\n      </Fragment>\n    )\n\n  return (\n    <Button\n      type=\"text\"\n      icon={<IonIcon name=\"power-outline\" />}\n      onClick={() => dispatch(disconnectWallet())}\n      block\n    >\n      Disconnect\n    </Button>\n  )\n}\n\nexport default Wallet\n","import { CSSProperties } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport fullLogo from 'os/static/images/sen-full.png'\nimport liteLogo from 'os/static/images/sen-lite.png'\n\nconst Brand = ({\n  style,\n  lite = false,\n}: {\n  lite?: boolean\n  style: CSSProperties\n}) => {\n  const history = useHistory()\n\n  return (\n    <img\n      src={lite ? liteLogo : fullLogo}\n      style={style}\n      alt=\"logo\"\n      onClick={() => history.push('/')}\n    />\n  )\n}\n\nexport default Brand\n","import { account } from '@senswap/sen-js'\nimport { net } from 'shared/runtime'\n\nexport const isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\n\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const openNewTab = (href: string) => {\n  return window.open(href, '_blank')\n}\n\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\nexport const toBigInt = (number: string): bigint => {\n  try {\n    return BigInt(number)\n  } catch (er) {\n    return BigInt(0)\n  }\n}\n","import { Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { Row, Col, Typography, Tooltip, Space, Card } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Wallet from '../../wallet'\n\nimport { explorer, shortenAddress } from 'shared/util'\nimport { RootState } from 'os/store'\n\nconst WalletIntro = () => {\n  const { address, lamports } = useSelector((state: RootState) => state.wallet)\n\n  const balance = numbro(utils.undecimalize(lamports, 9)).format('0.[00]')\n  const explore = () => window.open(explorer(address), '_blank')\n\n  if (!account.isAddress(address)) return <Fragment />\n  return (\n    <Card bodyStyle={{ padding: 16 }} hoverable>\n      <Row gutter={[16, 16]} align=\"middle\">\n        <Col flex=\"auto\">\n          <Tooltip\n            placement=\"topLeft\"\n            title={`${utils.undecimalize(lamports, 9)} SOL`}\n          >\n            <Typography.Title level={3}>\n              {balance} <span style={{ color: '#03E1FF' }}>◎</span>\n            </Typography.Title>\n          </Tooltip>\n        </Col>\n        <Col>\n          <Typography.Title\n            level={5}\n            type=\"secondary\"\n            onClick={explore}\n            style={{ cursor: 'pointer' }}\n          >\n            <Space>\n              {shortenAddress(address, 3, '...')}\n              <IonIcon name=\"open-outline\" />\n            </Space>\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Wallet />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default WalletIntro\n","import { Component } from 'react'\n\nimport { Row, Col, Typography, Button } from 'antd'\n\ninterface Props {\n  remoteUrl: string\n}\n\ninterface State {\n  failed: boolean\n}\n\n/**\n * Error Boundary\n */\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      failed: false,\n    }\n  }\n\n  componentDidCatch(error: Error) {\n    return this.setState({ failed: Boolean(error) })\n  }\n\n  support = () => {\n    const { remoteUrl } = this.props\n    return window.open(\n      `mailto:hi@sentre.io?subject=${remoteUrl} has failed`,\n      '_blank',\n    )\n  }\n\n  render() {\n    const { failed } = this.state\n    const { remoteUrl, children } = this.props\n\n    if (failed || !children)\n      return (\n        <Row\n          gutter={[8, 8]}\n          style={{ height: '100%' }}\n          align=\"middle\"\n          justify=\"center\"\n        >\n          <Col span={24}>\n            <Typography.Title level={4} style={{ textAlign: 'center' }}>\n              {remoteUrl}\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <p style={{ textAlign: 'center' }}>\n              Oops! The application can't load properly\n            </p>\n          </Col>\n          <Col span={24}>\n            <Button type=\"primary\" onClick={this.support} block>\n              Support\n            </Button>\n          </Col>\n        </Row>\n      )\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import { Suspense, forwardRef, cloneElement } from 'react'\nimport { useRemoteModule } from 'react-dynamic-remote-component'\nimport { RemoteModule } from 'react-dynamic-remote-component/dist/types/types'\n\nimport { Skeleton, Spin } from 'antd'\nimport ErrorBoundary from 'os/components/errorBoundary'\n\n/**\n * Remote Static\n */\nexport const RemoteStatic = forwardRef<\n  HTMLElement,\n  {\n    type?: string\n    manifest: RemoteModule\n    render: (src: string) => JSX.Element\n  }\n>(({ type = 'default', manifest, render }, ref) => {\n  const { [type]: src } = useRemoteModule(manifest)\n  return cloneElement(render(src), ref ? { ref } : {})\n})\n\n/**\n * Static Loader\n */\nexport const StaticLoader = forwardRef<\n  HTMLElement,\n  {\n    type: 'logo' | 'panel' | 'readme'\n    render: (url: string) => JSX.Element\n  } & ComponentManifest\n>(({ type, url, appId, render }, ref) => {\n  const manifest = { url, scope: appId, module: './static' }\n  return (\n    <ErrorBoundary remoteUrl={url || 'Unknown'}>\n      <Suspense fallback={<Spin size=\"small\" />}>\n        <RemoteStatic\n          type={type}\n          manifest={manifest}\n          render={render}\n          ref={ref}\n        />\n      </Suspense>\n    </ErrorBoundary>\n  )\n})\n\n/**\n * Remote component\n */\nconst RemoteComponent = forwardRef<HTMLElement, { manifest: RemoteModule }>(\n  ({ manifest, ...props }, ref) => {\n    const { default: Component } = useRemoteModule(manifest)\n    return <Component {...props} ref={ref} />\n  },\n)\n\n/**\n * Page Loader\n */\nexport const PageLoader = forwardRef<HTMLElement, ComponentManifest>(\n  ({ url, appId, ...props }, ref) => {\n    const manifest = { url, scope: appId, module: './page' }\n    return (\n      <ErrorBoundary remoteUrl={url || 'Unknown'}>\n        <Suspense fallback={<Skeleton active />}>\n          <RemoteComponent manifest={manifest} {...props} ref={ref} />\n        </Suspense>\n      </ErrorBoundary>\n    )\n  },\n)\n\n/**\n * Widget Loader\n */\nexport const WidgetLoader = forwardRef<HTMLElement, ComponentManifest>(\n  ({ url, appId, ...props }, ref) => {\n    const manifest = { url, scope: appId, module: './widget' }\n    return (\n      <ErrorBoundary remoteUrl={url || 'Unknown'}>\n        <Suspense fallback={<Skeleton active />}>\n          <RemoteComponent manifest={manifest} {...props} ref={ref} />\n        </Suspense>\n      </ErrorBoundary>\n    )\n  },\n)\n","import { Component, ReactNode, Suspense } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Space, Avatar, Typography, Spin } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport { RemoteStatic } from 'os/components/appLoader'\n\nimport { RootState } from 'os/store'\n\ntype Props = {\n  appId: string\n  size?: number\n  onClick?: () => void\n  name?: boolean\n}\n\nclass ErrorBoundary extends Component<Props, { failed: boolean }> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      failed: false,\n    }\n  }\n\n  componentDidCatch(error: Error) {\n    return this.setState({ failed: Boolean(error) })\n  }\n\n  render() {\n    const { failed } = this.state\n    const { children } = this.props\n\n    if (failed || !children) return <RawAppIcon {...this.props} src={null} />\n    return children\n  }\n}\n\nconst RawAppIcon = (props: Props & { src: ReactNode }) => {\n  const { src, appId, onClick = () => {}, size = 64, name = true } = props\n  const { register } = useSelector((state: RootState) => state.page)\n  const { name: appName } = register[appId] || { name: 'Unknown' }\n\n  return (\n    <Space\n      direction=\"vertical\"\n      style={{ width: size, textAlign: 'center' }}\n      onClick={onClick}\n    >\n      <Avatar\n        src={src}\n        shape=\"square\"\n        size={size}\n        style={{ cursor: 'pointer' }}\n      >\n        <IonIcon name=\"image-outline\" />\n      </Avatar>\n      {name ? (\n        <Typography.Text\n          style={{\n            fontSize: Math.floor(size / 4.5),\n          }}\n        >\n          {appName}\n        </Typography.Text>\n      ) : null}\n    </Space>\n  )\n}\n\nconst AppIcon = (props: Props) => {\n  const { appId } = props\n  const { register } = useSelector((state: RootState) => state.page)\n  const { url } = register[appId] || { url: '' }\n  const manifest = { url, scope: appId, module: './static' }\n\n  return (\n    <ErrorBoundary {...props}>\n      <Suspense fallback={<Spin />}>\n        <RemoteStatic\n          type=\"logo\"\n          manifest={manifest}\n          render={(src) => <RawAppIcon {...props} src={src} />}\n        />\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\nexport default AppIcon\n","import { ReactNode } from 'react'\nimport { useDroppable } from '@dnd-kit/core'\nimport { SortableContext } from '@dnd-kit/sortable'\n\nimport { Row, Col } from 'antd'\n\n/**\n * DroppablePage render as a Row\n */\nconst DroppablePage = ({\n  index,\n  items,\n  children,\n  disabled = false,\n}: {\n  index: number\n  items: string[]\n  children: ReactNode\n  disabled?: boolean\n}) => {\n  const { setNodeRef } = useDroppable({\n    id: `droppable-${index}`,\n    data: { isDroppableZone: true, index },\n    disabled,\n  })\n  const style = disabled\n    ? { transition: 'all 0.25s ease-in-out' }\n    : {\n        transition: 'all 0.25s ease-in-out',\n        background: '#00000010',\n        padding: 16,\n        borderRadius: 16,\n        minHeight: 100,\n      }\n\n  return (\n    <SortableContext items={items}>\n      <Row id={`droppable-${index}`} gutter={[16, 16]} ref={setNodeRef}>\n        <Col span={24}>\n          <div style={style}>\n            <Row gutter={[16, 16]}>{children}</Row>\n          </div>\n        </Col>\n      </Row>\n    </SortableContext>\n  )\n}\n\nexport default DroppablePage\n","import { useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\n\nimport { Col } from 'antd'\nimport AppIcon from 'os/components/appIcon'\n\n/**\n * DraggableIcon render as a Col\n */\nconst DraggableIcon = ({\n  appId,\n  size = 64,\n  onClick = () => {},\n  disabled = false,\n}: {\n  appId: string\n  size?: number\n  onClick?: () => void\n  disabled?: boolean\n}) => {\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({\n      id: appId,\n      disabled,\n    })\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    transition: transition,\n  }\n\n  return (\n    <Col\n      id={appId}\n      style={style}\n      {...listeners}\n      {...attributes}\n      ref={setNodeRef}\n    >\n      <AppIcon appId={appId} size={size} onClick={onClick} />\n    </Col>\n  )\n}\n\nexport default DraggableIcon\n","import { useSortable } from '@dnd-kit/sortable'\nimport {\n  Children,\n  cloneElement,\n  Fragment,\n  isValidElement,\n  ReactNode,\n} from 'react'\n\n/**\n * DraggableIcon render as a Col\n */\nconst DraggableAction = ({\n  id,\n  children,\n}: {\n  id: string\n  children: ReactNode\n}) => {\n  const { setNodeRef } = useSortable({\n    id: id,\n  })\n\n  const ChildrenWithProps = Children.map(children, (child) => {\n    if (isValidElement(child)) {\n      const childProps = { id, ref: setNodeRef }\n      return cloneElement(child, childProps)\n    }\n    return child\n  })\n\n  return <Fragment>{ChildrenWithProps}</Fragment>\n}\n\nexport default DraggableAction\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { isTouchable } from 'shared/util'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\nexport type Theme = 'light' | 'dark'\n\nexport type State = {\n  theme: Theme\n  width: number\n  infix: Infix\n  touchable: boolean\n  actionCenterVisible: boolean\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: State = {\n  theme: 'light',\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  actionCenterVisible: false,\n}\n\n/**\n * Actions\n */\n\nexport const setTheme = createAsyncThunk(\n  `${NAME}/setTheme`,\n  async (theme: Theme) => {\n    return { theme }\n  },\n)\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setActionCenterVisible = createAsyncThunk(\n  `${NAME}/setActionCenterVisible`,\n  async (visible: boolean) => {\n    return { actionCenterVisible: visible }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setTheme.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setActionCenterVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.sentre?.ipfs) window.sentre.ipfs = await create()\n      return window.sentre.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string): boolean => {\n    try {\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    const ipfs = await this._ipfs()\n    const stream = await ipfs.cat(cid)\n    let raw = ''\n    for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n    const data = JSON.parse(raw)\n    return data\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { path: cid } = await ipfs.add(raw)\n    return cid as string\n  }\n}\n\nexport default IPFS\n","import { useCallback, useState, useEffect } from 'react'\nimport { Connection } from '@solana/web3.js'\n\nimport { Row, Col, Typography, Space, Badge, Card } from 'antd'\nimport NetSwitch from './netSwitch'\n\nimport configs from 'os/configs'\n\nconst {\n  sol: { node },\n} = configs\nconst connection = new Connection(node)\n// 0: Failed, 1: Poor, 2: Moderate, 3: Good\ntype NetworkStatus = 0 | 1 | 2 | 3\nlet intervalId: ReturnType<typeof setTimeout> | undefined\n\nconst parseType = (status: number) => {\n  return status === 3\n    ? 'success'\n    : status === 2\n    ? 'warning'\n    : status === 1\n    ? 'error'\n    : 'default'\n}\n\nconst parseMessage = (status: number) => {\n  return status === 3\n    ? 'Good'\n    : status === 2\n    ? 'Moderate'\n    : status === 1\n    ? 'Poor'\n    : 'No'\n}\n\nconst Network = () => {\n  const [networkStatus, setNetworkStatus] = useState<NetworkStatus>(0)\n\n  // Intervally ping solana cluster\n  const ping = useCallback(async () => {\n    try {\n      if (!window.navigator.onLine) return setNetworkStatus(0)\n      const start = Date.now()\n      await connection.getVersion()\n      const end = Date.now()\n      const duration = end - start\n      if (duration < 250) return setNetworkStatus(3)\n      if (duration < 1000) return setNetworkStatus(2)\n      return setNetworkStatus(1)\n    } catch (er) {\n      return setNetworkStatus(0)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (intervalId) clearInterval(intervalId)\n    ping() // Init the network status\n    intervalId = setInterval(ping, 1000)\n    return () => {\n      if (intervalId) clearInterval(intervalId)\n      intervalId = undefined\n    }\n  }, [ping])\n\n  return (\n    <Card bodyStyle={{ padding: 16 }} hoverable>\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row gutter={[8, 8]} wrap={false}>\n            <Col flex=\"auto\">\n              <Typography.Text>Solana Network</Typography.Text>\n            </Col>\n            <Col>\n              <NetSwitch />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Space size={0}>\n            <Badge status={parseType(networkStatus)} dot />\n            <Typography.Text type=\"secondary\">\n              {`${parseMessage(networkStatus)} connection`}\n            </Typography.Text>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Network\n","import { useCallback, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Typography } from 'antd'\nimport AppIcon from 'os/components/appIcon'\n\nimport SearchEngine from './searchEngine'\nimport { RootDispatch, RootState } from 'os/store'\nimport { setLoading } from 'os/store/search.reducer'\n\nlet searching: ReturnType<typeof setTimeout> | undefined\n\nconst Market = () => {\n  const history = useHistory()\n  const dispatch = useDispatch<RootDispatch>()\n  const [appIds, setAppIds] = useState<string[]>()\n  const { value } = useSelector((state: RootState) => state.search)\n  const { register } = useSelector((state: RootState) => state.page)\n\n  const to = (appId: string) => history.push(`/store/${appId}`)\n\n  const onSearch = useCallback(async () => {\n    const engine = new SearchEngine(register)\n    await dispatch(setLoading(true))\n    if (searching) {\n      clearTimeout(searching)\n      searching = undefined\n    }\n    if (!value) {\n      await setAppIds(undefined)\n      await dispatch(setLoading(false))\n    }\n    searching = setTimeout(async () => {\n      const appIds = engine.search(value)\n      await setAppIds(appIds)\n      await dispatch(setLoading(false))\n      return window.scrollTo(0, 0)\n    }, 1000)\n  }, [value, dispatch, register])\n\n  useEffect(() => {\n    onSearch()\n  }, [onSearch])\n\n  return (\n    <Row gutter={[16, 24]}>\n      {appIds?.length ? (\n        <Col span={24}>\n          <Typography.Title level={4} type=\"secondary\">\n            Search Results\n          </Typography.Title>\n        </Col>\n      ) : null}\n      {appIds?.map((appId) => (\n        <Col key={appId}>\n          <AppIcon appId={appId} onClick={() => to(appId)} />\n        </Col>\n      ))}\n      <Col span={24}>\n        <Typography.Title level={4} type=\"secondary\">\n          All applications\n        </Typography.Title>\n      </Col>\n      {Object.keys(register).map((appId) => (\n        <Col key={appId}>\n          <AppIcon appId={appId} onClick={() => to(appId)} />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default Market\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  createInstance = (appId: string): any => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      (await this.createInstance('sentre').getItem('appIds')) || []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.ipfs.get(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\nimport configs from 'os/configs'\n\nconst {\n  register: { senreg, extra },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  register: SenHubRegister\n  appIds: AppIds\n  farvoriteAppIds: AppIds\n}\n\nconst troubleshoot = (appIds?: AppIds): AppIds => {\n  if (!appIds || !Array.isArray(appIds)) return []\n  return appIds.filter((appId) => appId)\n}\nconst fetchRegister = async () => {\n  try {\n    const re = await fetch(senreg)\n    return re.json()\n  } catch (er) {\n    return {}\n  }\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'page'\nconst initialState: State = {\n  register: {},\n  appIds: [],\n  farvoriteAppIds: [],\n}\n\n/**\n * Actions\n */\n\nexport const loadPage = createAsyncThunk<Partial<State>, void, { state: any }>(\n  `${NAME}/loadPage`,\n  async (_, { getState }) => {\n    const {\n      wallet: { address },\n    } = getState()\n    if (!account.isAddress(address))\n      throw new Error('Wallet is not connected yet')\n    // Fetch user's apps\n    const db = new PDB(address).createInstance('sentre')\n    const appIds = troubleshoot(\n      (await db.getItem('appIds')) || initialState.appIds,\n    )\n    // Fetch register\n    const register = await fetchRegister()\n    return { appIds, register: { ...register, ...extra } }\n  },\n)\n\nexport const updatePage = createAsyncThunk<\n  Partial<State>,\n  AppIds,\n  { state: any }\n>(`${NAME}/updatePage`, async (appIds, { getState }) => {\n  const {\n    wallet: { address },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  appIds = troubleshoot(appIds)\n  const pdb = new PDB(address)\n  await pdb.createInstance('sentre').setItem('appIds', appIds)\n  return { appIds }\n})\n\nexport const installApp = createAsyncThunk<\n  Partial<State>,\n  string,\n  { state: any }\n>(`${NAME}/installApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address },\n    page: { appIds },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  if (appIds.includes(appId)) return {}\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(appId)\n  const pdb = new PDB(address)\n  await pdb.createInstance('sentre').setItem('appIds', newAppIds)\n  return { appIds: newAppIds }\n})\n\nexport const uninstallApp = createAsyncThunk<\n  Partial<State>,\n  string,\n  { state: any }\n>(`${NAME}/uninstallApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address },\n    page: { appIds },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  if (!appIds.includes(appId)) return {}\n  const newAppIds = appIds.filter((_appId: string) => _appId !== appId)\n  const pdb = new PDB(address)\n  await pdb.createInstance('sentre').setItem('appIds', newAppIds)\n  await pdb.dropInstance(appId)\n  return { appIds: newAppIds }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadPage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updatePage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        uninstallApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n  DndContext,\n  DragEndEvent,\n  closestCorners,\n  rectIntersection,\n  MouseSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n  DragStartEvent,\n  DragOverEvent,\n  DragOverlay,\n} from '@dnd-kit/core'\nimport { arrayMove } from '@dnd-kit/sortable'\n\nimport { Row, Col, Button } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport AppIcon from 'os/components/appIcon'\nimport DroppablePage from './droppablePage'\nimport DraggableIcon from './draggableIcon'\nimport DraggableAction from './draggableAction'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { setActionCenterVisible } from 'os/store/ui.reducer'\nimport { uninstallApp, updatePage } from 'os/store/page.reducer'\n\n// Mixed Strategy\nconst mixedStrategy = (\n  ...args: Parameters<typeof rectIntersection | typeof closestCorners>\n) => {\n  const intersecting = rectIntersection(...args)\n  return intersecting ? intersecting : closestCorners(...args)\n}\n\nconst WidgetLayout = ({ disabled = true }: { disabled?: boolean }) => {\n  const history = useHistory()\n  const dispatch = useDispatch<RootDispatch>()\n  const [internalAppIds, setInternalPages] = useState<AppIds>([])\n  const [activeId, setActiveId] = useState<string>('')\n  const [actionId, setActionId] = useState('')\n  const sensors = useSensors(useSensor(MouseSensor), useSensor(TouchSensor))\n  const { appIds } = useSelector((state: RootState) => state.page)\n\n  useEffect(() => {\n    setInternalPages(appIds)\n  }, [appIds])\n\n  const open = async (appId: string) => {\n    await dispatch(setActionCenterVisible(false))\n    return history.push(`/app/${appId}`)\n  }\n\n  const onDragStart = ({ active }: DragStartEvent) => setActiveId(active.id)\n  const onDragOver = useCallback(\n    ({ over, active }: DragOverEvent) => {\n      // Remove an app\n      if (over?.id?.startsWith('action-')) return setActionId(over.id)\n      else setActionId('')\n      // Sort apps\n      const activeAppIndex = active.id\n      const overAppIndex = over?.id || activeAppIndex\n      // Sort the page\n      const newAppIds = arrayMove(\n        internalAppIds,\n        internalAppIds.indexOf(activeAppIndex),\n        internalAppIds.indexOf(overAppIndex),\n      )\n      // Update new pages\n      return setInternalPages(newAppIds)\n    },\n    [internalAppIds],\n  )\n  const onDragEnd = async ({ over, active }: DragEndEvent) => {\n    if (over?.id === 'action-remove') {\n      const activeId = active.id\n      const newInternalAppIds = internalAppIds.filter(\n        (appId) => appId !== activeId,\n      )\n      await setInternalPages(newInternalAppIds)\n      return dispatch(uninstallApp(activeId))\n    }\n    return dispatch(updatePage(internalAppIds))\n  }\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={mixedStrategy}\n      onDragStart={onDragStart}\n      onDragOver={onDragOver}\n      onDragEnd={onDragEnd}\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <DroppablePage index={0} items={internalAppIds} disabled={disabled}>\n            {internalAppIds.map((appId) => (\n              <DraggableIcon\n                key={appId}\n                appId={appId}\n                disabled={disabled}\n                size={64}\n                onClick={() => open(appId)}\n              />\n            ))}\n          </DroppablePage>\n        </Col>\n        {!disabled && (\n          <Col span={24}>\n            <DraggableAction id=\"action-remove\">\n              <Button\n                block\n                disabled={!activeId}\n                type={actionId ? 'primary' : undefined}\n                className=\"contained\"\n                icon={<IonIcon name=\"trash-outline\" />}\n              >\n                Drop here to delete\n              </Button>\n            </DraggableAction>\n          </Col>\n        )}\n      </Row>\n      <DragOverlay>\n        {activeId ? (\n          <span style={{ opacity: 0.5 }}>\n            <AppIcon appId={activeId} />\n          </span>\n        ) : null}\n      </DragOverlay>\n    </DndContext>\n  )\n}\n\nexport default WidgetLayout\n","import { useState } from 'react'\n\nimport { Row, Col, Switch, Typography } from 'antd'\nimport WalletIntro from './walletIntro'\nimport WidgetLayout from './widgetLayout'\n\nconst Applications = () => {\n  const [editable, setEditable] = useState(false)\n\n  return (\n    <Row gutter={[16, 24]}>\n      <Col span={24}>\n        <WalletIntro />\n      </Col>\n      <Col flex=\"auto\">\n        <Typography.Text>To customize your workspace</Typography.Text>\n      </Col>\n      <Col>\n        <Switch onChange={setEditable} size=\"small\" />\n      </Col>\n      <Col span={24}>\n        <WidgetLayout disabled={!editable} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Applications\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Switch, Typography, Card } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { setTheme } from 'os/store/ui.reducer'\n\nconst Theme = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { theme } = useSelector((state: RootState) => state.ui)\n\n  const onSwitch = (checked: boolean) => {\n    return dispatch(setTheme(checked ? 'dark' : 'light'))\n  }\n\n  return (\n    <Card bodyStyle={{ padding: 16 }} hoverable>\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row gutter={[8, 8]} wrap={false}>\n            <Col flex=\"auto\">\n              <Typography.Text>Theme</Typography.Text>\n            </Col>\n            <Col>\n              <Switch\n                size=\"small\"\n                checked={theme === 'dark'}\n                onChange={onSwitch}\n                checkedChildren={<IonIcon name=\"moon-outline\" />}\n                unCheckedChildren={<IonIcon name=\"sunny-outline\" />}\n                disabled\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph type=\"secondary\" style={{ fontSize: 12 }}>\n            Dark mode will prolong your battery life, and reduce eye strain\n            (coming soon).\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Theme\n","import { Select } from 'antd'\n\nimport { net, onSwitchNetwork } from 'shared/runtime'\n\nconst NetSwitch = () => {\n  return (\n    <Select defaultValue={net} onChange={onSwitchNetwork} size=\"small\">\n      <Select.Option value=\"devnet\">Devnet</Select.Option>\n      {/* <Select.Option value=\"testnet\">Testnet</Select.Option> */}\n      <Select.Option value=\"mainnet\">Mainnet</Select.Option>\n    </Select>\n  )\n}\n\nexport default NetSwitch\n","import { Row, Col, Button, Card, Typography } from 'antd'\nimport { RootState } from 'os/store'\nimport { useSelector } from 'react-redux'\nimport IonIcon from 'shared/ionicon'\n\nimport PDB from 'shared/pdb'\n\nconst Sync = () => {\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  const pdb = new PDB(walletAddress)\n\n  const onBackup = async () => {\n    console.log('onBackup')\n    const re = await pdb.backup()\n    console.log(re)\n  }\n  const onRestore = async () => {\n    console.log('onRestore')\n    const re = await pdb.restore(\n      'QmdxL9t5BMUjMkZD5VZ7McJzfR9gcv6ZZcXRvXzCNrGNVS',\n    )\n    console.log(re)\n  }\n\n  return (\n    <Card bodyStyle={{ padding: 16 }} hoverable>\n      <Row gutter={[16, 20]}>\n        <Col span={24}>\n          <Typography.Text>Backup & Restore</Typography.Text>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[8, 8]}>\n            <Col span={24}>\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"cloud-done-outline\" />}\n                onClick={onBackup}\n                block\n              >\n                Backup\n              </Button>\n            </Col>\n            <Col span={24}>\n              <Button\n                icon={<IonIcon name=\"archive-outline\" />}\n                onClick={onRestore}\n                block\n              >\n                Restore\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Sync\n","import { Row, Col } from 'antd'\nimport Theme from './theme'\nimport Network from './network'\nimport Sync from './sync'\n\nconst Settings = () => {\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={12}>\n        <Theme />\n      </Col>\n      <Col span={12}>\n        <Sync />\n      </Col>\n      <Col span={24}>\n        <Network />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Settings\n","import { Fragment } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Drawer, Button, Tabs } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Applications from './applications'\nimport Settings from './settings'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { setActionCenterVisible } from 'os/store/ui.reducer'\n\nconst ActionCenter = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { actionCenterVisible } = useSelector((state: RootState) => state.ui)\n\n  return (\n    <Fragment>\n      <Button\n        type=\"text\"\n        icon={<IonIcon name=\"menu\" style={{ fontSize: 20 }} />}\n        onClick={() => dispatch(setActionCenterVisible(!actionCenterVisible))}\n      />\n      <Drawer\n        visible={actionCenterVisible}\n        onClose={() => dispatch(setActionCenterVisible(false))}\n        closable={false}\n        contentWrapperStyle={{ width: '95%', maxWidth: 400 }}\n        destroyOnClose\n      >\n        <Row gutter={[16, 16]} style={{ marginTop: -16 }}>\n          <Col span={24}>\n            <Tabs\n              style={{ overflow: 'visible' }}\n              tabBarExtraContent={\n                <Button\n                  type=\"text\"\n                  icon={<IonIcon name=\"close-outline\" />}\n                  onClick={() => dispatch(setActionCenterVisible(false))}\n                />\n              }\n              destroyInactiveTabPane\n            >\n              <Tabs.TabPane\n                tab={\n                  <span>\n                    <IonIcon name=\"grid-outline\" />\n                    Applications\n                  </span>\n                }\n                key=\"action-center\"\n              >\n                <Applications />\n              </Tabs.TabPane>\n              <Tabs.TabPane\n                tab={\n                  <span>\n                    <IonIcon name=\"settings-outline\" />\n                    Settings\n                  </span>\n                }\n                key=\"system-settings\"\n              >\n                <Settings />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Drawer>\n    </Fragment>\n  )\n}\n\nexport default ActionCenter\n","import { useHistory } from 'react-router-dom'\n\nimport { Avatar } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nconst More = () => {\n  const history = useHistory()\n  return (\n    <span style={{ cursor: 'pointer' }} onClick={() => history.push('/store')}>\n      <Avatar shape=\"square\">\n        <IonIcon name=\"add-outline\" />\n      </Avatar>\n    </span>\n  )\n}\n\nexport default More\n","import { useSelector } from 'react-redux'\nimport { useHistory, useRouteMatch } from 'react-router-dom'\n\nimport { Row, Col, Badge } from 'antd'\nimport AppIcon from 'os/components/appIcon'\nimport More from './more'\n\nimport { RootState } from 'os/store'\n\nconst Navigation = () => {\n  const history = useHistory()\n  const { params } = useRouteMatch<{ appId: string }>('/app/:appId') || {}\n  const { appIds } = useSelector((state: RootState) => state.page)\n  return (\n    <Row gutter={[12, 12]} wrap={false} align=\"middle\">\n      {appIds.map((appId) => (\n        <Col key={appId}>\n          <Badge dot={params?.appId === appId} color=\"cyan\" offset={[-4, 4]}>\n            <AppIcon\n              appId={appId}\n              size={32}\n              name={false}\n              onClick={() => history.push(`/app/${appId}`)}\n            />\n          </Badge>\n        </Col>\n      ))}\n      <Col>\n        <More />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Navigation\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\ntype State = {\n  value: string\n  loading: boolean\n  disabled: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'search'\nconst initialState: State = {\n  value: '',\n  loading: false,\n  disabled: false,\n}\n\n/**\n * Actions\n */\n\nexport const setValue = createAsyncThunk<\n  Partial<State>,\n  string,\n  { state: any }\n>(`${NAME}/setValue`, async (value) => {\n  return { value }\n})\n\nexport const setLoading = createAsyncThunk<\n  Partial<State>,\n  boolean,\n  { state: any }\n>(`${NAME}/setLoading`, async (loading) => {\n  return { loading }\n})\n\nexport const setDisabled = createAsyncThunk<\n  Partial<State>,\n  boolean,\n  { state: any }\n>(`${NAME}/setDisabled`, async (disabled) => {\n  return { disabled }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setValue.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setDisabled.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { ChangeEvent, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation, useHistory } from 'react-router-dom'\n\nimport { Row, Col, Input, Button } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nimport { setValue } from 'os/store/search.reducer'\nimport { RootState } from 'os/store'\n\nconst Search = () => {\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const history = useHistory()\n  const { value, loading, disabled } = useSelector(\n    (state: RootState) => state.search,\n  )\n\n  const onChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      dispatch(setValue(e.target.value))\n    },\n    [dispatch],\n  )\n  const onClear = useCallback(() => {\n    dispatch(setValue(''))\n    history.push(location.pathname)\n  }, [dispatch, history, location.pathname])\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search)\n    dispatch(setValue(params.get('search') || ''))\n  }, [dispatch, location.search])\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Input\n          placeholder=\"Search\"\n          bordered={false}\n          onChange={onChange}\n          value={value}\n          prefix={\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={\n                <IonIcon\n                  name={value ? 'close-circle-outline' : 'search-outline'}\n                />\n              }\n              loading={loading}\n              disabled={disabled}\n              onClick={value ? onClear : () => {}}\n            />\n          }\n          disabled={disabled}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Search\n","import { useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Divider } from 'antd'\nimport Navigation from './navigation'\nimport Search from './search'\n\nimport { RootState } from 'os/store'\n\nconst ContextMenu = () => {\n  const { pathname } = useLocation()\n  const { width } = useSelector((state: RootState) => state.ui)\n  const { address } = useSelector((state: RootState) => state.wallet)\n\n  if (!account.isAddress(address)) return null\n  return (\n    <Row gutter={[12, 12]} wrap={false} align=\"middle\">\n      <Col>\n        <Divider\n          type=\"vertical\"\n          style={{ margin: `0px ${width < 768 ? 4 : 8}px` }}\n        />\n      </Col>\n      <Col flex=\"auto\" style={{ width: 0 }} className=\"scrollbar\">\n        {pathname.startsWith('/store') ? <Search /> : <Navigation />}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ContextMenu\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Space, Button } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Wallet from 'os/view/header/wallet'\nimport Brand from 'os/components/brand'\nimport ActionCenter from './actionCenter'\nimport ContextMenu from './contextMenu'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { loadPage } from 'os/store/page.reducer'\n\nconst NavButton = ({\n  iconName,\n  title,\n  route,\n}: {\n  iconName: string\n  title: string\n  route: string\n}) => {\n  const history = useHistory()\n  const { width } = useSelector((state: RootState) => state.ui)\n\n  return (\n    <Button\n      type=\"text\"\n      icon={<IonIcon name={iconName} />}\n      onClick={() => history.push(route)}\n    >\n      {width >= 768 ? title : null}\n    </Button>\n  )\n}\n\nconst Header = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n  const { width } = useSelector((state: RootState) => state.ui)\n\n  useEffect(() => {\n    if (account.isAddress(address)) dispatch(loadPage())\n  }, [dispatch, address])\n\n  return (\n    <Row gutter={[12, 12]} align=\"middle\" wrap={false}>\n      <Col>\n        <Brand style={{ height: 24, cursor: 'pointer' }} lite={width < 768} />\n      </Col>\n      <Col flex=\"auto\">\n        <ContextMenu />\n      </Col>\n      <Col>\n        <Space align=\"center\">\n          <NavButton iconName=\"grid-outline\" route=\"/dashboard\" title=\"Dashboard\" />\n          <NavButton\n            iconName=\"bag-handle-outline\"\n            route=\"/store\"\n            title=\"Store\"\n          />\n          {!account.isAddress(address) ? <Wallet /> : <ActionCenter />}\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Header\n","import { useEffect } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col } from 'antd'\n\nimport { RootState } from 'os/store'\n\nconst Welcome = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  // Redirect callback\n  useEffect(() => {\n    const params = new URLSearchParams(location.search)\n    const redirect = decodeURI(params.get('redirect') || '/welcome')\n    if (account.isAddress(walletAddress)) return history.push(redirect)\n  }, [walletAddress, history, location.search])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col span={24}>Welcome</Col>\n    </Row>\n  )\n}\n\nexport default Welcome\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col } from 'antd'\nimport { WidgetLoader } from 'os/components/appLoader'\n\nimport { RootState } from 'os/store'\n\nconst Dashboard = () => {\n  const { appIds, register } = useSelector((state: RootState) => state.page)\n\n  return (\n    <Row gutter={[24, 24]}>\n      {appIds.map((appId) => {\n        if (!register[appId]) return null\n        return (\n          <Col key={appId}>\n            <WidgetLoader {...(register[appId] as ComponentManifest)} />\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default Dashboard\n","import { useHistory } from 'react-router'\n\nimport { Row, Col, Typography, Button } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nconst NotFound = ({ appId }: { appId: string }) => {\n  const history = useHistory()\n  const search = () => {\n    return history.push(`/store?search=${appId}`)\n  }\n\n  return (\n    <Row gutter={[16, 16]} justify=\"center\">\n      <Col span={24} />\n      <Col>\n        <Typography.Title level={1}>\n          The app is not installed yet!\n        </Typography.Title>\n      </Col>\n      <Col span={24} />\n      <Col>\n        <Button\n          type=\"primary\"\n          onClick={search}\n          icon={<IonIcon name=\"search-outline\" />}\n        >\n          Search in the store\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default NotFound\n","import { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport { PageLoader } from 'os/components/appLoader'\nimport NotFound from './notFound'\n\nimport { RootState } from 'os/store'\n\nconst Dashboard = () => {\n  const { appId } = useParams<{ appId: string }>()\n  const { appIds, register } = useSelector((state: RootState) => state.page)\n\n  if (!register[appId]) return null\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        {appIds.includes(appId) ? (\n          <PageLoader {...(register[appId] as ComponentManifest)} />\n        ) : (\n          <NotFound appId={appId} />\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default Dashboard\n","import { Document } from 'flexsearch'\n\nconst PRESET = {\n  tokenize: 'full',\n  context: true,\n  minlength: 3,\n}\n\ntype SearchResult = {\n  result: string[]\n}\n\nclass SearchEngine {\n  register: SenHubRegister\n  index: typeof Document\n\n  constructor(register: SenHubRegister) {\n    this.register = register\n    this.index = new Document({\n      document: {\n        id: 'appId',\n        index: [\n          { field: 'appId', ...PRESET },\n          { field: 'name', ...PRESET },\n          { field: 'description', ...PRESET },\n          { field: 'author:name', ...PRESET },\n          { field: 'author:email', ...PRESET },\n        ],\n      },\n    })\n    Object.keys(register).forEach((appId: string) =>\n      this.add(appId, register[appId]),\n    )\n  }\n\n  add = (id: string, doc: any) => {\n    return this.index.add(id, doc)\n  }\n\n  search = (text: string, limit = 10) => {\n    let raw: SearchResult[] = []\n    text.split(',').forEach((word) => {\n      raw = raw.concat(this.index.search(word, limit))\n    })\n    let appIds: string[] = []\n    raw.forEach(({ result }) => {\n      return result.forEach((appId: string) => {\n        if (!appIds.includes(appId)) return appIds.push(appId)\n      })\n    })\n    return appIds.map(\n      (appId) => (this.register[appId] as ComponentManifest).appId,\n    )\n  }\n}\n\nexport default SearchEngine\n","import { useEffect, createRef, Component, Suspense } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Remarkable } from 'remarkable'\n\nimport { Row, Col, Typography, Spin } from 'antd'\nimport { RemoteStatic } from 'os/components/appLoader'\n\nimport { RootState } from 'os/store'\n\ntype Props = {\n  appId: string\n}\n\nconst Markdown = ({ src }: { src: string }) => {\n  const ref = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    ;(async () => {\n      if (!src) throw new Error('Invalid source url')\n      const txt = await (await fetch(src)).text()\n      // Parse data\n      const md = new Remarkable({ html: true })\n      if (ref.current) ref.current.innerHTML = md.render(txt)\n    })()\n  }, [src, ref])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24} ref={ref} />\n    </Row>\n  )\n}\n\nclass ErrorBoundary extends Component<Props, { failed: boolean }> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      failed: false,\n    }\n  }\n\n  componentDidCatch(error: Error) {\n    return this.setState({ failed: Boolean(error) })\n  }\n\n  render() {\n    const { failed } = this.state\n    const { children } = this.props\n\n    if (failed || !children)\n      return <Typography.Text>Cannot load the README.md</Typography.Text>\n    return children\n  }\n}\n\nconst AppReadme = (props: Props) => {\n  const { register } = useSelector((state: RootState) => state.page)\n  const { appId } = props\n  const { url } = register[appId] || { url: '' }\n  const manifest = { url, scope: appId, module: './static' }\n\n  return (\n    <ErrorBoundary {...props}>\n      <Suspense fallback={<Spin />}>\n        <RemoteStatic\n          type={'readme'}\n          manifest={manifest}\n          render={(src) => <Markdown src={src} />}\n        />\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\n\nexport default AppReadme\n","var _rect, _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgErrorImage(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 800,\n    height: 600,\n    viewBox: \"0 0 800 600\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 800,\n    height: 600,\n    rx: 16,\n    fill: \"#D3D3D6\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M450 245H350C341.716 245 335 251.716 335 260V340C335 348.284 341.716 355 350 355H450C458.284 355 465 348.284 465 340V260C465 251.716 458.284 245 450 245Z\",\n    stroke: \"#F4F4F5\",\n    strokeWidth: 8,\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M425 285C430.523 285 435 280.523 435 275C435 269.477 430.523 265 425 265C419.477 265 415 269.477 415 275C415 280.523 419.477 285 425 285Z\",\n    stroke: \"#F4F4F5\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415 324.934L386.669 296.656C384.866 294.853 382.443 293.807 379.895 293.732C377.347 293.656 374.866 294.557 372.959 296.249L335 329.999\",\n    stroke: \"#F4F4F5\",\n    strokeWidth: 8,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M390 355L428.544 316.457C430.306 314.69 432.666 313.647 435.158 313.531C437.651 313.416 440.097 314.236 442.016 315.832L465 335\",\n    stroke: \"#F4F4F5\",\n    strokeWidth: 8,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgErrorImage);\nexport default __webpack_public_path__ + \"static/media/error-image.2a4549c596199c25fa7af4dbefe26b3a.svg\";\nexport { ForwardRef as ReactComponent };","import { Component, Suspense } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Row, Col, Image, Spin } from 'antd'\nimport { RemoteStatic } from 'os/components/appLoader'\n\nimport { RootState } from 'os/store'\nimport ERROR_IMG from 'os/static/images/error-image.svg'\n\ntype Props = {\n  appId: string\n  onClick?: () => void\n}\n\nclass ErrorBoundary extends Component<Props, { failed: boolean }> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      failed: false,\n    }\n  }\n\n  componentDidCatch(error: Error) {\n    return this.setState({ failed: Boolean(error) })\n  }\n\n  render() {\n    const { failed } = this.state\n    const { children } = this.props\n\n    if (failed || !children)\n      return <RawAppPanel {...this.props} src={ERROR_IMG} />\n    return children\n  }\n}\n\nconst RawAppPanel = ({ src, onClick = () => {} }: Props & { src: string }) => {\n  return (\n    <Row>\n      <Col span={24} style={{ lineHeight: 0 }}>\n        <Image src={src} width=\"100%\" onClick={onClick} preview={false} />\n      </Col>\n    </Row>\n  )\n}\n\nconst AppPanel = (props: Props) => {\n  const { register } = useSelector((state: RootState) => state.page)\n  const { appId } = props\n  const { url } = register[appId] || { url: '' }\n  const manifest = { url, scope: appId, module: './static' }\n\n  return (\n    <ErrorBoundary {...props}>\n      <Suspense fallback={<Spin />}>\n        <RemoteStatic\n          type=\"panel\"\n          manifest={manifest}\n          render={(src) => <RawAppPanel {...props} src={src} />}\n        />\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\n\nexport default AppPanel\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col, Card, Typography, Divider } from 'antd'\nimport AppIcon from 'os/components/appIcon'\nimport AppPanel from 'os/components/appPanel'\n\nimport { RootState } from 'os/store'\n\nconst TitleAndValue = ({\n  title,\n  value,\n  divider = false,\n}: {\n  title: string\n  value: string\n  divider?: boolean\n}) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Row gutter={[8, 8]}>\n          <Col flex=\"auto\">\n            <Typography.Text type=\"secondary\">{title}</Typography.Text>\n          </Col>\n          <Col>\n            <Typography.Text>{value}</Typography.Text>\n          </Col>\n        </Row>\n      </Col>\n      {divider ? (\n        <Col span={24}>\n          <Divider style={{ marginTop: 0, marginBottom: 8 }} />\n        </Col>\n      ) : null}\n    </Row>\n  )\n}\n\nconst HeroPanel = ({ appId }: { appId: string }) => {\n  const { register } = useSelector((state: RootState) => state.page)\n  const { description, author, name } = register[appId] || {}\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <AppPanel appId={appId} />\n      </Col>\n      <Col span={24}>\n        <Card>\n          <Row gutter={[16, 16]}>\n            <Col>\n              <AppIcon appId={appId} size={48} name={false} />\n            </Col>\n            <Col span={24}>\n              <TitleAndValue title=\"Name\" value={name || ''} divider />\n            </Col>\n            <Col span={24}>\n              <TitleAndValue\n                title=\"Author\"\n                value={author?.name || ''}\n                divider\n              />\n            </Col>\n            <Col span={24}>\n              <TitleAndValue\n                title=\"Support\"\n                value={author?.email || ''}\n                divider\n              />\n            </Col>\n            <Col span={24}>\n              <TitleAndValue title=\"Description\" value={description || ''} />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default HeroPanel\n","import { useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Button, Space } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport AppReadme from 'os/components/appReadme'\nimport HeroPanel from './heroPanel'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { installApp, uninstallApp } from 'os/store/page.reducer'\n\nconst AppViewer = () => {\n  const history = useHistory()\n  const dispatch = useDispatch<RootDispatch>()\n  const { appId } = useParams<{ appId: string }>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n  const { appIds } = useSelector((state: RootState) => state.page)\n\n  const installed = useMemo(() => {\n    return account.isAddress(address) && appIds.includes(appId)\n  }, [address, appIds, appId])\n  const to = () => history.push(`/app/${appId}`)\n  const onBack = () => history.goBack()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={{ span: 24 }} md={{ span: 8 }}>\n        <HeroPanel appId={appId} />\n      </Col>\n      <Col xs={{ span: 24 }} md={{ span: 16 }}>\n        <Row gutter={[24, 24]}>\n          <Col flex=\"auto\">\n            <Button\n              className=\"contained\"\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              onClick={onBack}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            {installed ? (\n              <Space>\n                <Button\n                  icon={<IonIcon name=\"trash-outline\" />}\n                  onClick={() => dispatch(uninstallApp(appId))}\n                >\n                  Uninstall\n                </Button>\n                <Button type=\"primary\" onClick={to}>\n                  Open\n                </Button>\n              </Space>\n            ) : (\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"cloud-download-outline\" />}\n                onClick={() => dispatch(installApp(appId))}\n              >\n                Install\n              </Button>\n            )}\n          </Col>\n          <Col span={24}>\n            <AppReadme appId={appId} />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default AppViewer\n","import { Fragment, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { notification } from 'antd'\n\nimport { RootDispatch } from 'os/store'\nimport { resize } from 'os/store/ui.reducer'\nimport IonIcon from 'shared/ionicon'\n\nconst UIWatcher = () => {\n  const [api, contextHolder] = notification.useNotification()\n  const dispatch = useDispatch<RootDispatch>()\n\n  // Notification system\n  window.notify = ({\n    type,\n    description,\n    onClick = () => {},\n  }: SentreNotification) => {\n    return api[type]({\n      message: type.toUpperCase(),\n      description,\n      onClick,\n      style: { cursor: 'pointer' },\n      closeIcon: <IonIcon name=\"close-outline\" />,\n    })\n  }\n\n  // Listen window events\n  useEffect(() => {\n    window.onresize = () => dispatch(resize())\n  }, [dispatch])\n\n  return <Fragment>{contextHolder}</Fragment>\n}\n\nexport default UIWatcher\n","import { useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { updateWallet } from 'os/store/wallet.reducer'\nimport { RootDispatch, RootState } from 'os/store'\n\n// Watch id\nlet watchId: any = null\n\nconst WalletWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n\n  const watchData = useCallback(async () => {\n    if (!account.isAddress(address)) {\n      try {\n        await window.sentre.lamports.unwatch(watchId)\n      } catch (er) {\n        /* Nothing */\n      }\n      watchId = null\n    } else {\n      if (watchId) return console.warn('Already watched')\n      watchId = window.sentre.lamports.watch(\n        address,\n        (er: string | null, re: number | null) => {\n          if (er) return console.warn(er)\n          return dispatch(updateWallet({ lamports: BigInt(re || 0) }))\n        },\n      )\n    }\n  }, [dispatch, address])\n\n  useEffect(() => {\n    watchData()\n  }, [watchData])\n\n  return null\n}\n\nexport default WalletWatcher\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, AccountData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, AccountData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'accounts'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(\n  `${NAME}/getAccounts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(owner)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: State = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = splt.parseAccountData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getAccount = createAsyncThunk<\n  State,\n  { address: string },\n  { state: any }\n>(`${NAME}/getAccount`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid account address')\n  const {\n    accounts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { splt } = window.sentre\n  const raw = await splt.getAccountData(address)\n  return { [address]: raw }\n})\n\nexport const upsetAccount = createAsyncThunk<\n  State,\n  { address: string; data: AccountData },\n  { state: any }\n>(`${NAME}/upsetAccount`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteAccount = createAsyncThunk(\n  `${NAME}/deleteAccount`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getAccounts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteAccount.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { getAccounts, upsetAccount } from 'os/store/accounts.reducer'\n\n// Watch id\nlet watchId = 0\nlet prevLamports: BigInt | undefined = undefined\n\nconst AccountWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address: walletAddress, lamports } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getAccounts({ owner: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of accounts',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch account changes\n  const watchData = useCallback(async () => {\n    if (!account.isAddress(walletAddress))\n      return console.warn('Wallet is not connected')\n    if (watchId) return console.warn('Already watched')\n    const { splt } = window.sentre || {}\n    const filters = [{ memcmp: { bytes: walletAddress, offset: 32 } }]\n    watchId = splt?.watch((er: string | null, re: any) => {\n      if (er) return console.error(er)\n      const { address, data } = re\n      return dispatch(upsetAccount({ address, data }))\n    }, filters)\n  }, [dispatch, walletAddress])\n\n  // When we close accounts, there a high chance\n  // that the next balance will be greater than the current balance\n  // We use this trick to reload relevant list\n  useEffect(() => {\n    if (typeof prevLamports !== 'undefined' && lamports > prevLamports) {\n      dispatch(getAccounts({ owner: walletAddress }))\n    }\n    prevLamports = lamports\n  }, [dispatch, walletAddress, lamports])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await window.sentre.splt.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default AccountWatcher\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, PoolData } from '@senswap/sen-js'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const { swap } = window.sentre\n  // Get all pools\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await swap.connection.getProgramAccounts(swap.swapProgramId, {\n      filters: [\n        { dataSize: 257 },\n        { memcmp: { bytes: taxmanAddress, offset: 65 } },\n      ],\n    })\n  let bulk: State = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = swap.parsePoolData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  State,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { swap } = window.sentre\n  const raw = await swap.getPoolData(address)\n  return { [address]: raw }\n})\n\nexport const upsetPool = createAsyncThunk<\n  State,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { getPools, upsetPool } from 'os/store/pools.reducer'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n// Watch id\nlet watchId = 0\n\nconst PoolWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getPools()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of pools',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch account changes\n  const watchData = useCallback(async () => {\n    if (watchId) return console.warn('Already watched')\n    const { swap } = window.sentre || {}\n    const filters = [{ memcmp: { bytes: taxmanAddress, offset: 65 } }]\n    watchId = swap?.watch((er: string | null, re: any) => {\n      if (er) return console.error(er)\n      const { address, data } = re\n      return dispatch(upsetPool({ address, data }))\n    }, filters)\n  }, [dispatch])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await window.sentre.swap.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default PoolWatcher\n","import { Fragment } from 'react'\nimport UIWatcher from './ui.watcher'\nimport WalletWatcher from './wallet.watcher'\nimport AccountWatcher from './account.watcher'\nimport PoolWatcher from './pool.watcher'\n\nconst Watcher = () => {\n  return (\n    <Fragment>\n      <UIWatcher />\n      <WalletWatcher />\n      <AccountWatcher />\n      <PoolWatcher />\n    </Fragment>\n  )\n}\n\nexport default Watcher\n","import { Route, Switch, Redirect } from 'react-router-dom'\n\nimport { Layout, Row, Col, Card, Affix } from 'antd'\nimport PrivateRoute from 'os/components/privateRoute'\nimport Header from 'os/view/header'\nimport Welcome from 'os/view/welcome'\nimport Dashboard from 'os/view/dashboard'\nimport Page from 'os/view/page'\nimport Market from 'os/view/market'\nimport AppViewer from './market/appViewer'\n\nimport Watcher from 'os/view/watcher'\nimport 'os/static/styles/index.os.less'\n\nconst View = () => {\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      {/* Header */}\n      <Affix>\n        <Card\n          style={{\n            marginBottom: 12,\n            borderRadius: '0px 0px 16px 16px',\n          }}\n          bodyStyle={{ padding: 16 }}\n          bordered={false}\n        >\n          <Header />\n        </Card>\n      </Affix>\n      {/* Body */}\n      <Layout style={{ padding: 12 }}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Switch>\n              <Route exact path=\"/welcome\" component={Welcome} />\n              <Route exact path=\"/dashboard/:pageId?\" component={Dashboard} />\n              <PrivateRoute exact path=\"/app/:appId\" component={Page} />\n              <Route exact path=\"/store\" component={Market} />\n              <Route exact path=\"/store/:appId\" component={AppViewer} />\n              <Redirect from=\"*\" to=\"/welcome\" />\n            </Switch>\n          </Col>\n        </Row>\n      </Layout>\n      {/* In-Background Run Jobs */}\n      <Watcher />\n    </Layout>\n  )\n}\n\nexport default View\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\ntype State = {\n  visited: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: State = {\n  visited: true,\n}\n\n/**\n * Actions\n */\n\nexport const setVisited = createAsyncThunk<\n  Partial<State>,\n  boolean,\n  { state: any }\n>(`${NAME}/setVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n    flags: prevFlags,\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  return { ...prevFlags, visited }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setVisited.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  State,\n  { address: string; force: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.sentre\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  State,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport ui from './ui.reducer'\nimport flags from './flags.reducer'\nimport page from './page.reducer'\nimport wallet from './wallet.reducer'\nimport accounts from './accounts.reducer'\nimport mints from './mints.reducer'\nimport pools from './pools.reducer'\nimport search from './search.reducer'\n\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('sentre'),\n  reducer: {\n    ui,\n    flags,\n    page,\n    wallet,\n    accounts,\n    mints,\n    pools,\n    search,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type RootDispatch = typeof store.dispatch\nexport default store\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport { ConfigProvider } from 'antd'\nimport View from 'os/view'\n\nimport store from 'os/store'\nimport reportWebVitals from 'reportWebVitals'\n\nrender(\n  <Provider store={store}>\n    <ConfigProvider prefixCls=\"sentre\">\n      <BrowserRouter>\n        <View />\n      </BrowserRouter>\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"names":["Component","component","rest","walletAddress","useSelector","state","wallet","address","render","useCallback","props","pathname","encodeURI","window","location","href","replace","origin","account","Redirect","to","Route","forwardRef","ref","name","className","cln","KEY","driver","localStorage","convert","value","JSON","parse","e","storage","set","key","data","getItem","setItem","stringify","get","clear","net","getNetwork","onSwitchNetwork","reload","SOLVARS","spltAddress","splataAddress","devnet","node","chainId","senAddress","swapAddress","taxmanAddress","bulksenderAddress","testnet","mainnet","devApp","process","url","appId","author","email","description","verified","sol","register","development","extra","senreg","staging","production","initializeWindowSenOs","configs","sentre","lamports","Lamports","splt","SPLT","swap","Swap","destroyWindowSenOs","disconnect","NAME","initialState","visible","BigInt","openWallet","createAsyncThunk","closeWallet","connectWallet","Error","getAddress","getLamports","updateWallet","disconnectWallet","createSlice","reducers","extraReducers","builder","addCase","fulfilled","payload","Object","assign","sessionStorage","session","walletType","getProvider","signTransaction","transaction","rawSignTransaction","signature","publicKey","addSignature","signMessage","message","verifySignature","this","SecretKeyWallet","secretKey","_setSecretKey","keypair","provider","toBase58","confirm","signData","serializeMessage","nacl","Buffer","from","toString","valid","BaseWallet","KeystoreWallet","keystore","password","Coin98Wallet","coin98","request","method","feePayer","params","sig","decode","PhantomWallet","solana","isPhantom","isConnected","connect","Promise","resolve","on","encodedMsg","TextEncoder","encode","bufSig","toBuffer","SolletWallet","connected","sign","WalletAdapter","SlopeWallet","Slope","msg","PublicKey","slopeAddress","dispatch","useDispatch","notify","type","unwrap","Card","onClick","style","cursor","bordered","hoverable","Row","gutter","justify","Col","Avatar","size","shape","src","COIN98","span","margin","textAlign","PHANTOM","SOLLET","onClose","useState","setPassword","setKeystore","useEffect","ks","Modal","onCancel","closeIcon","footer","Typography","Input","placeholder","onChange","target","iconRender","Button","icon","fileDownload","disabled","filename","setFilename","setVisible","refFile","useRef","Space","align","rel","xs","md","suffix","marginRight","current","click","readOnly","accept","files","file","reader","FileReader","readAsText","onloadend","result","display","marginTop","setSecretKey","acc","SLOPE","advance","setAdvance","level","flex","Divider","plain","orientation","Tooltip","title","Switch","checked","checkedChildren","unCheckedChildren","height","reconnect","er","block","Fragment","lite","history","useHistory","liteLogo","fullLogo","alt","push","asyncWait","ms","setTimeout","shortenAddress","num","delimiter","substring","length","balance","numbro","utils","format","bodyStyle","padding","placement","color","open","addressOrTxId","ErrorBoundary","support","remoteUrl","failed","error","setState","Boolean","children","RemoteStatic","manifest","useRemoteModule","cloneElement","RemoteComponent","default","PageLoader","scope","module","Suspense","fallback","Skeleton","active","WidgetLoader","RawAppIcon","appName","page","direction","width","fontSize","Math","floor","Spin","index","items","setNodeRef","useDroppable","id","isDroppableZone","transition","background","borderRadius","minHeight","useSortable","attributes","listeners","transform","CSS","ChildrenWithProps","Children","child","isValidElement","childProps","getInfix","innerWidth","theme","infix","touchable","navigator","maxTouchPoints","actionCenterVisible","setTheme","resize","setActionCenterVisible","IPFS","_ipfs","ipfs","create","cid","isCID","cat","stream","raw","chunk","add","path","isIPFS","intervalId","searching","dbName","createInstance","localForage","storeName","dropInstance","instance","all","appIds","flat","concat","iterate","backup","restore","troubleshoot","Array","isArray","filter","fetchRegister","fetch","re","json","farvoriteAppIds","loadPage","_","getState","db","PDB","updatePage","pdb","installApp","includes","newAppIds","uninstallApp","_appId","mixedStrategy","intersecting","rectIntersection","closestCorners","internalAppIds","setInternalPages","activeId","setActiveId","actionId","setActionId","sensors","useSensors","useSensor","MouseSensor","TouchSensor","onDragOver","over","startsWith","activeAppIndex","overAppIndex","arrayMove","indexOf","onDragEnd","newInternalAppIds","collisionDetection","onDragStart","map","undefined","opacity","editable","setEditable","ui","wrap","Select","defaultValue","connection","Connection","parseMessage","status","networkStatus","setNetworkStatus","ping","onLine","start","Date","now","getVersion","end","duration","clearInterval","setInterval","Badge","dot","onBackup","console","log","onRestore","Drawer","closable","contentWrapperStyle","maxWidth","destroyOnClose","Tabs","overflow","tabBarExtraContent","destroyInactiveTabPane","tab","useRouteMatch","offset","setValue","setLoading","loading","setDisabled","useLocation","search","onClear","URLSearchParams","prefix","NavButton","iconName","route","redirect","decodeURI","useParams","PRESET","tokenize","context","minlength","doc","text","limit","split","forEach","word","Document","document","field","keys","setAppIds","onSearch","engine","SearchEngine","clearTimeout","scrollTo","Markdown","createRef","txt","Remarkable","html","innerHTML","RawAppPanel","ERROR_IMG","lineHeight","Image","preview","TitleAndValue","divider","marginBottom","installed","useMemo","goBack","notification","api","contextHolder","toUpperCase","onresize","watchId","watchData","unwatch","warn","watch","getAccounts","owner","ownerPublicKey","getTokenAccountsByOwner","programId","spltProgramId","bulk","pubkey","buf","parseAccountData","getAccount","accounts","getAccountData","upsetAccount","deleteAccount","prevLamports","fetchData","filters","memcmp","bytes","getPools","getProgramAccounts","swapProgramId","dataSize","parsePoolData","getPool","pools","getPoolData","upsetPool","Layout","Affix","exact","Welcome","Dashboard","Page","Market","AppViewer","prototype","toJSON","bigintSerializationMiddleware","serializableCheck","isSerializable","val","obj","proto","getPrototypeOf","isPlainObject","setVisited","visited","prevFlags","flags","getMint","force","getMintData","upsetMint","deleteMint","configureStore","middleware","getDefaultMiddleware","devTools","reducer","mints","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Provider","store","ConfigProvider","prefixCls","BrowserRouter","getElementById","reportWebVitals"],"sourceRoot":""}